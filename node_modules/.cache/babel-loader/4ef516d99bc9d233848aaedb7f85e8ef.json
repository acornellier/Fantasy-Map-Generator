{"remainingRequest":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/babel-loader/lib/index.js!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/options/StyleContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/options/StyleContent.vue","mtime":1550935127513},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { svg, viewbox } from '../utils';\n\nvar selectedValue = function selectedValue() {\n  return document.getElementById('styleElementSelect').value;\n};\n\nvar selectedElement = function selectedElement() {\n  return svg().select('#' + selectedValue());\n};\n\nexport default {\n  name: 'StyleContent',\n  methods: {\n    selectStyle: function selectStyle(event) {\n      var oceanLayers = viewbox().select(\"#ocean\").select(\"#oceanLayers\");\n      var sel = event.target.value;\n      var el = viewbox().select(\"#\" + sel);\n      if (sel == \"ocean\") el = oceanLayers.select(\"rect\");\n      $(\"#styleInputs > div\").hide(); // opacity\n\n      $(\"#styleOpacity, #styleFilter\").css(\"display\", \"block\");\n      var opacity = el.attr(\"opacity\") || 1;\n      $('#styleOpacityInput').value = $('#styleOpacityOutput').value = opacity; // filter\n\n      if (sel == \"ocean\") el = oceanLayers;\n      $('#styleFilterInput').value = el.attr(\"filter\") || \"\";\n\n      if (sel === \"rivers\" || sel === \"lakes\" || sel === \"landmass\") {\n        $(\"#styleFill\").css(\"display\", \"inline-block\");\n        $('#styleFillInput').value = $('#styleFillOutput').value = el.attr(\"fill\");\n      }\n\n      if (sel === \"roads\" || sel === \"trails\" || sel === \"searoutes\" || sel === \"lakes\" || sel === \"stateBorders\" || sel === \"neutralBorders\" || sel === \"grid\" || sel === \"overlay\" || sel === \"coastline\") {\n        $(\"#styleStroke\").css(\"display\", \"inline-block\");\n        $('#styleStrokeInput').value = $('#styleStrokeOutput').value = el.attr(\"stroke\");\n        $(\"#styleStrokeWidth\").css(\"display\", \"block\");\n        var width = el.attr(\"stroke-width\") || \"\";\n        $('#styleStrokeWidthInput').value = $('#styleStrokeWidthOutput').value = width;\n      }\n\n      if (sel === \"roads\" || sel === \"trails\" || sel === \"searoutes\" || sel === \"stateBorders\" || sel === \"neutralBorders\" || sel === \"overlay\") {\n        $(\"#styleStrokeDasharray, #styleStrokeLinecap\").css(\"display\", \"block\");\n        $('#styleStrokeDasharrayInput').value = el.attr(\"stroke-dasharray\") || \"\";\n        $('#styleStrokeLinecapInput').value = el.attr(\"stroke-linecap\") || \"inherit\";\n      }\n\n      if (sel === \"terrs\") $(\"#styleScheme\").css(\"display\", \"block\");\n      if (sel === \"heightmap\") $(\"#styleScheme\").css(\"display\", \"block\");\n      if (sel === \"overlay\") $(\"#styleOverlay\").css(\"display\", \"block\");\n\n      if (sel === \"labels\") {\n        $(\"#styleFill, #styleStroke, #styleStrokeWidth, #styleFontSize\").css(\"display\", \"inline-block\");\n        $('#styleFillInput').value = $('#styleFillOutput').value = el.select(\"g\").attr(\"fill\") || \"#3e3e4b\";\n        $('#styleStrokeInput').value = $('#styleStrokeOutput').value = el.select(\"g\").attr(\"stroke\") || \"#3a3a3a\";\n        $('#styleStrokeWidthInput').value = $('#styleStrokeWidthOutput').value = el.attr(\"stroke-width\") || 0;\n        $(\"#styleLabelGroups\").css(\"display\", \"inline-block\");\n        this.$emit('updateLabelGroups');\n      }\n\n      if (sel === \"ocean\") {\n        $(\"#styleOcean\").css(\"display\", \"block\");\n        $('#styleOceanBack').value = $('#styleOceanBackOutput').value = svg().style(\"background-color\");\n        $('#styleOceanFore').value = $('#styleOceanForeOutput').value = oceanLayers.select(\"rect\").attr(\"fill\");\n      }\n\n      if (sel === \"coastline\") {\n        $(\"#styleCoastline\").css(\"display\", \"block\");\n        if ($(\"#styleCoastline\").checked) $(\"#styleFilter\").hide();\n      }\n    },\n    restoreStyles: function restoreStyles() {\n      var _this = this;\n\n      $('#alertMessage').innerHTML = 'Are you sure you want to restore default style?';\n\n      var applyDefaultStyle = function applyDefaultStyle() {\n        return _this.$emit('applyDefaultStyle');\n      };\n\n      $('#alert').dialog({\n        resizable: false,\n        title: 'Restore style',\n        buttons: {\n          Restore: function Restore() {\n            applyDefaultStyle();\n            $(_this).dialog('close');\n          },\n          Cancel: function Cancel() {\n            $(_this).dialog('close');\n          }\n        }\n      });\n    },\n    selectType: function selectType() {\n      viewbox().select('#overlay').selectAll('*').remove();\n      if (!$('#toggleOverlay').hasClass('buttonoff')) this.$emit(\"toggleOverlay\");\n    },\n    changeSize: function changeSize(event) {\n      this.selectType();\n      $('#styleOverlaySizeOutput').value = event.target.value;\n    },\n    inputFill: function inputFill(event) {\n      $('#styleFillOutput').value = event.target.value;\n      var el = selectedElement();\n\n      if ($('#styleElementSelect').value !== 'labels') {\n        el.attr('fill', event.target.value);\n      } else {\n        el.selectAll('g').attr('fill', event.target.value);\n      }\n    },\n    inputStroke: function inputStroke(event) {\n      $('#styleStrokeOutput').value = event.target.value;\n      selectedElement().attr('stroke', event.target.value);\n    },\n    inputStrokeWidth: function inputStrokeWidth(event) {\n      $('#styleStrokeWidthOutput').value = event.target.value;\n      selectedElement().attr('stroke-width', +event.target.value);\n    },\n    inputStrokeDasharray: function inputStrokeDasharray(event) {\n      selectedElement().attr('stroke-dasharray', event.target.value);\n    },\n    inputStrokeLinecap: function inputStrokeLinecap(event) {\n      selectedElement().attr('stroke-linecap', event.target.value);\n    },\n    inputStyleOpacity: function inputStyleOpacity(event) {\n      $('#styleOpacityOutput').value = event.target.value;\n      selectedElement().attr('opacity', event.target.value);\n    },\n    inputStyleFilter: function inputStyleFilter(event) {\n      var sel = selectedValue();\n      if (sel == 'ocean') sel = 'oceanLayers';\n      var el = svg().select('#' + sel);\n      el.attr('filter', event.target.value);\n    },\n    inputStyleScheme: function inputStyleScheme() {\n      viewbox().select('#terrs').selectAll('path').remove();\n      this.$emit('toggleHeight');\n    },\n    styleOceanBack: function styleOceanBack(event) {\n      svg().style('background-color', event.target.value);\n      $('#styleOceanBackOutput').value = event.target.value;\n    },\n    styleOceanFore: function styleOceanFore(event) {\n      viewbox().select('#ocean').select('#oceanLayers').select('rect').attr('fill', event.target.value);\n      $('styleOceanForeOutput').value = event.target.value;\n    },\n    styleOceanLayers: function styleOceanLayers(event) {\n      var oceanLayers = viewbox().select('#ocean').select('#oceanLayers');\n      var display = event.target.checked ? 'block' : 'none';\n      oceanLayers.selectAll('path').attr('display', display);\n    },\n    styleOceanPattern: function styleOceanPattern(event) {\n      var oceanPattern = viewbox().select('#ocean').select('#oceanPattern');\n      oceanPattern.attr('opacity', +event.target.checked);\n    }\n  }\n};",{"version":3,"sources":["StyleContent.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div id=\"styleContent\" class=\"tabcontent\">\n  <p style=\"display: inline-block;\">Select element:</p>\n  <select id=\"styleElementSelect\" @change=\"selectStyle($event)\">\n    <option value=\"grid\">Grid</option>\n    <option value=\"neutralBorders\">Borders (neutral)</option>\n    <option value=\"stateBorders\">Borders (state)</option>\n    <option value=\"coastline\">Coastline</option>\n    <option value=\"regions\">Countries</option>\n    <option value=\"cults\">Cultures</option>\n    <option value=\"terrs\">Heightmap</option>\n    <option value=\"icons\">Icons</option>\n    <option value=\"labels\">Labels</option>\n    <option value=\"lakes\">Lakes</option>\n    <option value=\"landmass\">Landmass</option>\n    <option value=\"markers\">Markers</option>\n    <option value=\"ocean\" selected>Ocean</option>\n    <option value=\"overlay\">Overlay</option>\n    <option value=\"terrain\">Relief</option>\n    <option value=\"rivers\">Rivers</option>\n    <option value=\"roads\">Roads</option>\n    <option value=\"ruler\">Rulers</option>\n    <option value=\"trails\">Trails</option>\n    <option value=\"searoutes\">Searoutes</option>\n    <option value=\"scaleBar\">Scale bar</option>\n  </select>\n  <i id=\"restoreStyle\" onmouseover=\"tip('Restore default style')\" class=\"icon-ccw\" @click=\"restoreStyles\"></i>\n  <div id=\"styleInputs\">\n    <div id=\"styleOverlay\">\n      <br><span>Ensure Overlay layer is active (see Layout tab)</span><br>\n      <br>Overlay type:\n      <select id=\"styleOverlayType\" class=\"pureInput\" @change=\"selectType\">\n      <option value=\"pointyHex\" selected>Hex grid (pointy)</option>\n      <option value=\"flatHex\">Hex grid (flat)</option>\n      <option value=\"square\">Square grid</option>\n      <option value=\"windrose\">Wind rose</option>\n    </select><br>\n      <br>Size:\n      <input id=\"styleOverlaySize\" type=\"range\" min=\"2\" max=\"50\" step=\"0.1\" value=\"10\" @change=\"changeSize($event)\">\n      <output id=\"styleOverlaySizeOutput\" onmouseover=\"tip('Overlay size')\">10</output>\n      <output id=\"styleOverlaySizeFriendly\"\n              onmouseover=\"tip('Size between two adjacent cells in map scale')\">(52 mi)\n      </output>\n    </div>\n    <div id=\"styleOcean\">\n      <br>Elements:\n      <input id=\"styleOceanPattern\" class=\"checkbox\" type=\"checkbox\" checked @change=\"styleOceanPattern($event)\">\n      <label for=\"styleOceanPattern\" onmouseover=\"tip('Toggle ocean pattern')\"\n             class=\"checkbox-label\">Pattern</label>\n      <input id=\"styleOceanLayers\" class=\"checkbox\" type=\"checkbox\" checked @change=\"styleOceanLayers($event)\">\n      <label for=\"styleOceanLayers\" onmouseover=\"tip('Toggle ocean layers')\"\n             class=\"checkbox-label\">Layers</label><br>\n      Background: <input id=\"styleOceanBack\" type=\"color\" value=\"#000000\" @input=\"styleOceanBack($event)\"/>\n      <output id=\"styleOceanBackOutput\">#000000</output>\n      <br>\n      Foreground: <input id=\"styleOceanFore\" type=\"color\" value=\"#53679f\" @input=\"styleOceanFore($event)\"/>\n      <output id=\"styleOceanForeOutput\">#53679f</output>\n    </div>\n    <div id=\"styleFill\">\n      Fill: <input id=\"styleFillInput\" type=\"color\" value=\"#5E4FA2\" @input=\"inputFill($event)\"/>\n      <output id=\"styleFillOutput\">#5E4FA2</output>\n    </div>\n    <div id=\"styleStroke\">\n      Stroke: <input id=\"styleStrokeInput\" type=\"color\" value=\"#5E4FA2\" @input=\"inputStroke($event)\"/>\n      <output id=\"styleStrokeOutput\">#5E4FA2</output>\n    </div>\n    <div id=\"styleStrokeWidth\">\n      <br>Stroke width: <input id=\"styleStrokeWidthInput\" type=\"range\" min=\"0\" max=\"3\"\n                               step=\"0.01\" value=\"1\" @input=\"inputStrokeWidth($event)\">\n      <output id=\"styleStrokeWidthOutput\">1</output>\n    </div>\n    <div id=\"styleStrokeDasharray\">\n      <br>Stroke dasharray: <input id=\"styleStrokeDasharrayInput\" class=\"pureInput\"\n                                   value=\"1 2\" @input=\"inputStrokeDasharray($event)\">\n    </div>\n    <div id=\"styleStrokeLinecap\">\n      <br>Stroke linecap: <select id=\"styleStrokeLinecapInput\" class=\"pureInput\" @change=\"inputStrokeLinecap($event)\">\n      <option value=\"inherit\" selected>Inherit</option>\n      <option value=\"butt\">Butt</option>\n      <option value=\"round\">Round</option>\n      <option value=\"square\">Square</option>\n    </select>\n    </div>\n    <div id=\"styleFontSize\">\n      <br>Font size:\n      <button class=\"whiteButton\" onmouseover=\"tip('Multiply all Fonts size by 1.1')\"\n              id=\"styleFontPlus\">+\n      </button>\n      <button class=\"whiteButton\" onmouseover=\"tip('Multiply all Fonts size by 0.9')\"\n              id=\"styleFontMinus\">-\n      </button>\n    </div>\n    <div id=\"styleSize\">\n      <br>Radius:\n      <button class=\"whiteButton\" onmouseover=\"tip('Multiply Radius by 1.1')\"\n              id=\"styleFillPlus\">+\n      </button>\n      <button class=\"whiteButton\" onmouseover=\"tip('Multiply Radius by 0.9')\"\n              id=\"styleFillMinus\">-\n      </button>\n      <span> Stroke: </span>\n      <button class=\"whiteButton\" onmouseover=\"tip('Multiply Stroke-width by 1.1')\"\n              id=\"styleStrokePlus\">+\n      </button>\n      <button class=\"whiteButton\" onmouseover=\"tip('Multiply Stroke-width by 0.9')\"\n              id=\"styleStrokeMinus\">-\n      </button>\n    </div>\n\n    <div id=\"styleOpacity\">\n      <br>Opacity: <input id=\"styleOpacityInput\" type=\"range\" min=\"0\" max=\"1\" step=\"0.01\"\n                          value=\"1\" @input=\"inputStyleOpacity($event)\">\n      <output id=\"styleOpacityOutput\">1</output>\n    </div>\n    <div id=\"styleFilter\">\n      <br>Filter: <select id=\"styleFilterInput\" class=\"pureInput\" @change=\"inputStyleFilter($event)\">\n      <option value=\"\" selected>None</option>\n      <option value=\"url(#blurFilter)\">Blur 0.2</option>\n      <option value=\"url(#blur1)\">Blur 1</option>\n      <option value=\"url(#blur5)\">Blur 5</option>\n      <option value=\"url(#blur10)\">Blur 10</option>\n      <option value=\"url(#splotch)\">Splotch</option>\n      <option value=\"url(#bluredSplotch)\">Blured Splotch</option>\n      <option value=\"url(#dropShadow01)\">Shadow 0.1</option>\n      <option value=\"url(#dropShadow05)\">Shadow 0.5</option>\n      <option value=\"url(#dropShadow)\">Shadow 2</option>\n      <option value=\"url(#outline)\">Outline</option>\n      <option value=\"url(#pencil)\">Pencil</option>\n      <option value=\"url(#turbulence)\">Turbulence</option>\n    </select>\n    </div>\n    <div id=\"styleScheme\">\n      <br>Color scheme: <select id=\"styleSchemeInput\" class=\"pureInput\" @change=inputStyleScheme()>\n      <option value=\"bright\" selected>Bright</option>\n      <option value=\"light\">Light</option>\n      <option value=\"green\">Green</option>\n      <option value=\"monochrome\">Monochrome</option>\n    </select>\n    </div>\n    <div id=\"styleLabelGroups\">\n      <fieldset>\n        <legend>Label groups:</legend>\n        <input id=\"hideLabels\" class=\"checkbox\" type=\"checkbox\" checked>\n        <label for=\"hideLabels\"\n               onmouseover=\"tip('Allow system to hide labels if their size in too small on that scale)')\"\n               class=\"checkbox-label\">Toggle visibility automatically</label>\n        <div id=\"styleLabelGroupItems\"></div>\n      </fieldset>\n    </div>\n  </div>\n  <div id=\"mapFilters\">\n    <p>Toggle filters:</p>\n    <button id=\"grayscale\" class=\"radio\">Grayscale</button>\n    <button id=\"sepia\" class=\"radio\">Sepia</button>\n    <button id=\"dingy\" class=\"radio\">Dingy</button>\n    <button id=\"tint\" class=\"radio\">Tint</button>\n  </div>\n</div>\n</template>\n\n<script>\nimport {svg, viewbox} from '../utils'\n\nconst selectedValue = () => document.getElementById('styleElementSelect').value\nconst selectedElement = () => svg().select('#' + selectedValue())\n\nexport default {\n  name: 'StyleContent',\n  methods: {\n    selectStyle(event) {\n      const oceanLayers = viewbox().select(\"#ocean\").select(\"#oceanLayers\");\n\n      const sel = event.target.value;\n      let el = viewbox().select(\"#\"+sel);\n      if (sel == \"ocean\") el = oceanLayers.select(\"rect\");\n      $(\"#styleInputs > div\").hide();\n\n      // opacity\n      $(\"#styleOpacity, #styleFilter\").css(\"display\", \"block\");\n      const opacity = el.attr(\"opacity\") || 1;\n      $('#styleOpacityInput').value = $('#styleOpacityOutput').value = opacity;\n\n      // filter\n      if (sel == \"ocean\") el = oceanLayers;\n      $('#styleFilterInput').value = el.attr(\"filter\") || \"\";\n      if (sel === \"rivers\" || sel === \"lakes\" || sel === \"landmass\") {\n        $(\"#styleFill\").css(\"display\", \"inline-block\");\n        $('#styleFillInput').value = $('#styleFillOutput').value = el.attr(\"fill\");\n      }\n\n      if (sel === \"roads\" || sel === \"trails\" || sel === \"searoutes\" || sel === \"lakes\" || sel === \"stateBorders\" || sel === \"neutralBorders\" || sel === \"grid\" || sel === \"overlay\" || sel === \"coastline\") {\n        $(\"#styleStroke\").css(\"display\", \"inline-block\");\n        $('#styleStrokeInput').value = $('#styleStrokeOutput').value = el.attr(\"stroke\");\n        $(\"#styleStrokeWidth\").css(\"display\", \"block\");\n        const width = el.attr(\"stroke-width\") || \"\";\n        $('#styleStrokeWidthInput').value = $('#styleStrokeWidthOutput').value = width;\n      }\n\n      if (sel === \"roads\" || sel === \"trails\" || sel === \"searoutes\" || sel === \"stateBorders\" || sel === \"neutralBorders\" || sel === \"overlay\") {\n        $(\"#styleStrokeDasharray, #styleStrokeLinecap\").css(\"display\", \"block\");\n        $('#styleStrokeDasharrayInput').value = el.attr(\"stroke-dasharray\") || \"\";\n        $('#styleStrokeLinecapInput').value = el.attr(\"stroke-linecap\") || \"inherit\";\n      }\n\n      if (sel === \"terrs\") $(\"#styleScheme\").css(\"display\", \"block\");\n      if (sel === \"heightmap\") $(\"#styleScheme\").css(\"display\", \"block\");\n      if (sel === \"overlay\") $(\"#styleOverlay\").css(\"display\", \"block\");\n\n      if (sel === \"labels\") {\n        $(\"#styleFill, #styleStroke, #styleStrokeWidth, #styleFontSize\").css(\"display\", \"inline-block\");\n        $('#styleFillInput').value = $('#styleFillOutput').value = el.select(\"g\").attr(\"fill\") || \"#3e3e4b\";\n        $('#styleStrokeInput').value = $('#styleStrokeOutput').value = el.select(\"g\").attr(\"stroke\") || \"#3a3a3a\";\n        $('#styleStrokeWidthInput').value = $('#styleStrokeWidthOutput').value = el.attr(\"stroke-width\") || 0;\n        $(\"#styleLabelGroups\").css(\"display\", \"inline-block\");\n        this.$emit('updateLabelGroups');\n      }\n\n      if (sel === \"ocean\") {\n        $(\"#styleOcean\").css(\"display\", \"block\");\n        $('#styleOceanBack').value = $('#styleOceanBackOutput').value = svg().style(\"background-color\");\n        $('#styleOceanFore').value = $('#styleOceanForeOutput').value = oceanLayers.select(\"rect\").attr(\"fill\");\n      }\n\n      if (sel === \"coastline\") {\n        $(\"#styleCoastline\").css(\"display\", \"block\");\n        if ($(\"#styleCoastline\").checked) $(\"#styleFilter\").hide();\n      }\n    },\n    restoreStyles() {\n      $('#alertMessage').innerHTML = 'Are you sure you want to restore default style?'\n      const applyDefaultStyle = () => this.$emit('applyDefaultStyle')\n      $('#alert').dialog({\n        resizable: false, title: 'Restore style',\n        buttons: {\n          Restore: () => {\n            applyDefaultStyle()\n            $(this).dialog('close')\n          },\n          Cancel: () => {\n            $(this).dialog('close')\n          }\n        }\n      })\n    },\n    selectType() {\n      viewbox().select('#overlay').selectAll('*').remove()\n      if (!$('#toggleOverlay').hasClass('buttonoff'))\n        this.$emit(\"toggleOverlay\")\n    },\n    changeSize(event) {\n      this.selectType()\n      $('#styleOverlaySizeOutput').value = event.target.value\n    },\n    inputFill(event) {\n      $('#styleFillOutput').value = event.target.value\n      const el = selectedElement()\n      if ($('#styleElementSelect').value !== 'labels') {\n        el.attr('fill', event.target.value)\n      } else {\n        el.selectAll('g').attr('fill', event.target.value)\n      }\n    },\n    inputStroke(event) {\n      $('#styleStrokeOutput').value = event.target.value\n      selectedElement().attr('stroke', event.target.value)\n    },\n    inputStrokeWidth(event) {\n      $('#styleStrokeWidthOutput').value = event.target.value\n      selectedElement().attr('stroke-width', +event.target.value)\n    },\n    inputStrokeDasharray(event) {\n      selectedElement().attr('stroke-dasharray', event.target.value)\n    },\n    inputStrokeLinecap(event) {\n      selectedElement().attr('stroke-linecap', event.target.value)\n    },\n    inputStyleOpacity(event) {\n      $('#styleOpacityOutput').value = event.target.value\n      selectedElement().attr('opacity', event.target.value)\n    },\n    inputStyleFilter(event) {\n      let sel = selectedValue()\n      if (sel == 'ocean') sel = 'oceanLayers'\n      const el = svg().select('#' + sel)\n      el.attr('filter', event.target.value)\n    },\n    inputStyleScheme() {\n      viewbox().select('#terrs').selectAll('path').remove()\n      this.$emit('toggleHeight')\n    },\n    styleOceanBack(event) {\n      svg().style('background-color', event.target.value)\n      $('#styleOceanBackOutput').value = event.target.value\n    },\n    styleOceanFore(event) {\n      viewbox().select('#ocean').select('#oceanLayers').select('rect').attr('fill', event.target.value)\n      $('styleOceanForeOutput').value = event.target.value\n    },\n    styleOceanLayers(event) {\n      const oceanLayers = viewbox().select('#ocean').select('#oceanLayers')\n      const display = event.target.checked ? 'block' : 'none'\n      oceanLayers.selectAll('path').attr('display', display)\n    },\n    styleOceanPattern(event) {\n      const oceanPattern = viewbox().select('#ocean').select('#oceanPattern')\n      oceanPattern.attr('opacity', +event.target.checked)\n    },\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/options"}]}