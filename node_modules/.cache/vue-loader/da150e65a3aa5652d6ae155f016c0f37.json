{"remainingRequest":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/dialogs/ScaleEditor.vue?vue&type=template&id=632c481a&","dependencies":[{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/dialogs/ScaleEditor.vue","mtime":1550714101560},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      {\n        staticClass: \"dialog stable\",\n        staticStyle: { display: \"none\" },\n        attrs: { id: \"scaleEditor\" }\n      },\n      [\n        _c(\"div\", { attrs: { id: \"scaleBody\" } }, [\n          _c(\"div\", { staticClass: \"scaleHeader\" }, [\n            _c(\"span\", { staticClass: \"icon-map-signs\" }),\n            _c(\"div\", [_vm._v(\"Distances:\")])\n          ]),\n          _c(\"div\", [\n            _c(\"div\", [_vm._v(\"Distance unit:\")]),\n            _c(\n              \"select\",\n              {\n                attrs: {\n                  onmouseover: \"tip('Select Distance unit')\",\n                  id: \"distanceUnit\"\n                }\n              },\n              [\n                _c(\"option\", { attrs: { value: \"mi\", selected: \"\" } }, [\n                  _vm._v(\"Mile\")\n                ]),\n                _c(\"option\", { attrs: { value: \"km\" } }, [_vm._v(\"Kilometer\")]),\n                _c(\"option\", { attrs: { value: \"lg\" } }, [_vm._v(\"League\")]),\n                _c(\"option\", { attrs: { value: \"vr\" } }, [_vm._v(\"Versta\")]),\n                _c(\"option\", { attrs: { value: \"custom_name\" } }, [\n                  _vm._v(\"Custom name\")\n                ])\n              ]\n            )\n          ]),\n          _c(\"div\", [\n            _c(\n              \"div\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Select how many distance unit are in one pixel')\"\n                }\n              },\n              [_vm._v(\"1 map pixel =\\n        \")]\n            ),\n            _c(\"input\", {\n              attrs: {\n                id: \"distanceScale\",\n                onmouseover:\n                  \"tip('Select how many distance unit are in one pixel')\",\n                type: \"range\",\n                min: \"0.1\",\n                max: \"10\",\n                value: \"3\",\n                step: \"0.1\"\n              }\n            }),\n            _c(\"input\", {\n              staticClass: \"output\",\n              attrs: {\n                id: \"scaleOutput\",\n                onmouseover:\n                  \"tip('Enter how many distance unit are in one pixel')\",\n                type: \"text\",\n                value: \"3 mi\"\n              }\n            })\n          ]),\n          _c(\"div\", [\n            _c(\n              \"div\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Type area unit name, leave `square` just to add ² to the distance unit selected above')\"\n                }\n              },\n              [_vm._v(\"\\n          Area unit:\\n        \")]\n            ),\n            _c(\"input\", {\n              attrs: {\n                id: \"areaUnit\",\n                onmouseover:\n                  \"tip('Type area unit name, leave `square` just to add ² to the distance unit selected above')\",\n                type: \"text\",\n                value: \"square\"\n              }\n            })\n          ]),\n          _c(\"div\", { staticClass: \"scaleHeader\" }, [\n            _c(\"span\", { staticClass: \"icon-signal\" }),\n            _c(\"div\", [_vm._v(\"Altitude:\")])\n          ]),\n          _c(\"div\", [\n            _c(\"div\", [_vm._v(\"Height unit:\")]),\n            _c(\n              \"select\",\n              {\n                attrs: {\n                  onmouseover: \"tip('Select Height unit')\",\n                  id: \"heightUnit\"\n                }\n              },\n              [\n                _c(\"option\", { attrs: { value: \"ft\", selected: \"\" } }, [\n                  _vm._v(\"Feet\")\n                ]),\n                _c(\"option\", { attrs: { value: \"m\" } }, [_vm._v(\"Meters\")]),\n                _c(\"option\", { attrs: { value: \"f\" } }, [_vm._v(\"Fathoms\")])\n              ]\n            )\n          ]),\n          _c(\"div\", [\n            _c(\n              \"div\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Select height exponent, i.e. a value showing altitude change sharpness')\"\n                }\n              },\n              [_vm._v(\"\\n          Exponent:\\n        \")]\n            ),\n            _c(\"input\", {\n              attrs: {\n                id: \"heightExponent\",\n                onmouseover:\n                  \"tip('Select height exponent, i.e. a value showing altitude change sharpness')\",\n                onchange: \"heightOutput.value = this.value\",\n                type: \"range\",\n                min: \"1.5\",\n                max: \"2\",\n                value: \"1.73\",\n                step: \"0.01\"\n              }\n            }),\n            _c(\"input\", {\n              staticClass: \"output\",\n              attrs: {\n                id: \"heightOutput\",\n                onmouseover:\n                  \"tip('Select height exponent, i.e. a value showing altitude change sharpness')\",\n                type: \"text\",\n                value: \"1.73\"\n              }\n            })\n          ]),\n          _c(\"div\", { staticClass: \"scaleHeader\" }, [\n            _c(\"span\", { staticClass: \"icon-minus\" }),\n            _c(\"div\", [_vm._v(\"Scale bar:\")])\n          ]),\n          _c(\"div\", [\n            _c(\n              \"div\",\n              { attrs: { onmouseover: \"tip('Change scale bar size')\" } },\n              [_vm._v(\"Scale bar size:\")]\n            ),\n            _c(\"input\", {\n              attrs: {\n                id: \"barSize\",\n                onmouseover: \"tip('Set scale bar size')\",\n                type: \"range\",\n                min: \"0.5\",\n                max: \"4\",\n                value: \"2\",\n                step: \"0.1\"\n              }\n            }),\n            _c(\"output\", { attrs: { id: \"barSizeOutput\" } }, [_vm._v(\"1\")])\n          ]),\n          _c(\"div\", [\n            _c(\n              \"div\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Change scale bar label, leave blank to hide label')\"\n                }\n              },\n              [_vm._v(\"Scale bar\\n          label:\\n        \")]\n            ),\n            _c(\"input\", {\n              attrs: {\n                id: \"barLabel\",\n                onmouseover:\n                  \"tip('Set scale bar label, leave blank to hide label')\",\n                type: \"text\",\n                placeholder: \"hidden\",\n                value: \"\"\n              }\n            })\n          ]),\n          _c(\"div\", [\n            _c(\n              \"div\",\n              { attrs: { onmouseover: \"tip('Set background for Scale bar')\" } },\n              [_vm._v(\"Background opacity:\")]\n            ),\n            _c(\"input\", {\n              attrs: {\n                id: \"barBackOpacity\",\n                onmouseover: \"tip('Set Scale bar background opacity')\",\n                type: \"range\",\n                min: \"0\",\n                max: \"1\",\n                value: \"0.2\",\n                step: \"0.01\"\n              }\n            }),\n            _c(\"input\", {\n              attrs: {\n                id: \"barBackColor\",\n                onmouseover: \"tip('Set Scale bar background color')\",\n                type: \"color\",\n                value: \"#ffffff\"\n              }\n            })\n          ]),\n          _c(\"div\", { staticClass: \"scaleHeader\" }, [\n            _c(\"span\", { staticClass: \"icon-male\" }),\n            _c(\"div\", [_vm._v(\"Population:\")])\n          ]),\n          _c(\"div\", [\n            _c(\n              \"div\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Set how many people are in one population point')\"\n                }\n              },\n              [_vm._v(\"1 population\\n          point =\\n        \")]\n            ),\n            _c(\"input\", {\n              attrs: {\n                id: \"populationRate\",\n                onmouseover:\n                  \"tip('Set how many people are in one population point, in Kilos')\",\n                type: \"range\",\n                min: \"0.1\",\n                max: \"10\",\n                value: \"1\",\n                step: \"0.1\"\n              }\n            }),\n            _c(\"input\", {\n              staticClass: \"output\",\n              attrs: {\n                id: \"populationRateOutput\",\n                onmouseover: \"tip('Enter the population rate, in Kilos')\",\n                type: \"text\",\n                value: \"1K\"\n              }\n            })\n          ]),\n          _c(\"div\", [\n            _c(\"div\", [_vm._v(\"Urbanization rate:\")]),\n            _c(\"input\", {\n              attrs: {\n                id: \"urbanization\",\n                onmouseover:\n                  \"tip('Set the ubranization (burgs population relative to all population) rate')\",\n                type: \"range\",\n                min: \"0.01\",\n                max: \"5\",\n                value: \"1\",\n                step: \"0.01\"\n              }\n            }),\n            _c(\"input\", {\n              staticClass: \"output\",\n              attrs: {\n                id: \"urbanizationOutput\",\n                onmouseover:\n                  \"tip('Enter the ubranization (burgs population relative to all population) rate')\",\n                type: \"text\",\n                value: \"1\"\n              }\n            })\n          ])\n        ]),\n        _c(\"div\", { attrs: { id: \"scaleBottom\" } }, [\n          _c(\"button\", {\n            staticClass: \"icon-align-center\",\n            attrs: {\n              id: \"toggleScaleBar\",\n              onmouseover: \"tip('Click to toggle scale bar')\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-eye-off\",\n            attrs: {\n              onmouseover: \"tip('Click to toggle rulers (measurers)')\",\n              onclick: '$(\"#ruler\").fadeToggle()'\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-brush\",\n            attrs: {\n              id: \"addOpisometer\",\n              onmouseover: \"tip('Drag to measure curve length with opisometer')\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-resize-horizontal\",\n            attrs: {\n              id: \"addRuler\",\n              onmouseover: \"tip('Click to place additional linear ruler')\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-check-empty\",\n            attrs: {\n              id: \"addPlanimeter\",\n              onmouseover:\n                \"tip('Drag to measure a polygon area with planimeter')\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-trash\",\n            attrs: {\n              id: \"removeAllRulers\",\n              onmouseover:\n                \"tip('Remove all rulers from the map. Click on ruler label to remove ruler separately')\"\n            }\n          })\n        ])\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}