{"remainingRequest":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/dialogs/Dialogs.vue?vue&type=template&id=2709e8c7&scoped=true&","dependencies":[{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/dialogs/Dialogs.vue","mtime":1550709691403},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      {\n        staticStyle: { \"background-color\": \"#ffffff\" },\n        attrs: { id: \"dialogs\" }\n      },\n      [\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"labelEditor\" }\n          },\n          [\n            _c(\"button\", {\n              staticClass: \"icon-tags\",\n              attrs: {\n                id: \"labelGroupButton\",\n                onmouseover: \"tip('Edit label Group')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"labelGroupButtons\" }\n              },\n              [\n                _c(\"select\", {\n                  attrs: {\n                    id: \"labelGroupSelect\",\n                    onmouseover: \"tip('Select Group for this label')\"\n                  }\n                }),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"labelGroupInput\",\n                    placeholder: \"new group name\",\n                    onmouseover: \"tip('Declare new Group for this label')\"\n                  }\n                }),\n                _c(\"span\", {\n                  staticClass: \"icon-plus\",\n                  attrs: {\n                    id: \"labelGroupNew\",\n                    onmouseover: \"tip('Declare new Group for this label')\"\n                  }\n                }),\n                _c(\"span\", {\n                  staticClass: \"icon-trash\",\n                  attrs: {\n                    id: \"labelGroupRemove\",\n                    onmouseover: \"tip('Remove the Group with all labels')\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-pencil\",\n              attrs: {\n                id: \"labelTextButton\",\n                onmouseover: \"tip('Edit label Text')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"labelTextButtons\" }\n              },\n              [\n                _c(\"input\", { attrs: { id: \"labelText\" } }),\n                _c(\"span\", {\n                  staticClass: \"icon-shuffle\",\n                  attrs: {\n                    id: \"labelTextRandom\",\n                    onmouseover: \"tip('Generate random name')\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-font\",\n              attrs: {\n                id: \"labelFontButton\",\n                onmouseover: \"tip('Select Font for the entire Group')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"labelFontButtons\" }\n              },\n              [\n                _c(\"span\", {\n                  staticClass: \"icon-plus\",\n                  attrs: {\n                    id: \"labelExternalFont\",\n                    onmouseover:\n                      \"tip('Fetch fonts by linking @font-face declaration, just populate with font name if using Google font (fonts.google.com)')\"\n                  }\n                }),\n                _c(\"select\", {\n                  attrs: {\n                    id: \"labelFontSelect\",\n                    onmouseover: \"tip('Select one of the default Fonts')\"\n                  }\n                }),\n                _vm._v('/ class=\"hidden\">\\n      '),\n                _c(\"i\", {\n                  staticClass: \"icon-text-height\",\n                  attrs: { id: \"labelSizeIcon\" }\n                }),\n                _c(\"input\", {\n                  staticClass: \"editNumber\",\n                  attrs: {\n                    id: \"labelSize\",\n                    onmouseover: \"tip('Change Font size for the label Group')\",\n                    value: \"14\",\n                    type: \"number\",\n                    min: \"1\",\n                    max: \"100\",\n                    step: \".5\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-brush\",\n              attrs: {\n                id: \"labelStyleButton\",\n                onmouseover:\n                  \"tip('Select text color and opacity for the label Group')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"labelStyleButtons\" }\n              },\n              [\n                _c(\"input\", {\n                  staticClass: \"editColor\",\n                  attrs: { id: \"labelColor\", type: \"color\", value: \"#3e3e4b\" }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-adjust hidden\",\n                  attrs: { id: \"labelOpacityIcon\" }\n                }),\n                _c(\"input\", {\n                  staticClass: \"editNumber\",\n                  attrs: {\n                    id: \"labelOpacity\",\n                    onmouseover: \"tip('Change Opacity for the entire Group')\",\n                    value: \"1\",\n                    type: \"number\",\n                    min: \"0\",\n                    max: \"1\",\n                    step: \"0.02\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-clone hidden\",\n                  attrs: { id: \"labelShadowIcon\" }\n                }),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"labelShadow\",\n                    onmouseover: \"tip('Change Shadow for the entire Group')\",\n                    value: \"1\",\n                    type: \"number\",\n                    min: \"0\",\n                    max: \"1\",\n                    step: \"0.02\",\n                    disabled: \"\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-ccw\",\n              attrs: {\n                id: \"labelAngleButton\",\n                onmouseover: \"tip('Rotate the label')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"labelAngleButtons\" }\n              },\n              [\n                _c(\"input\", {\n                  staticClass: \"editRange\",\n                  attrs: {\n                    id: \"labelAngle\",\n                    value: \"0\",\n                    type: \"range\",\n                    min: \"-90\",\n                    max: \"90\",\n                    step: \"0.2\"\n                  }\n                }),\n                _c(\n                  \"span\",\n                  {\n                    staticClass: \"labelValue\",\n                    attrs: { id: \"labelAngleValue\" }\n                  },\n                  [_vm._v(\"0Â°\")]\n                ),\n                _c(\"button\", {\n                  staticClass: \"icon-arc\",\n                  attrs: {\n                    id: \"labelCurve\",\n                    onmouseover: \"tip('Show control points to curve the label')\"\n                  }\n                }),\n                _c(\"button\", {\n                  staticClass: \"icon-minus\",\n                  attrs: {\n                    id: \"labelCurveCancel\",\n                    onmouseover: \"tip('Convert curved label into a normal one')\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-edit\",\n              attrs: {\n                id: \"labelLegend\",\n                onmouseover:\n                  \"tip('Edit free text notes (legend) for this label')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-clone\",\n              attrs: { id: \"labelCopy\", onmouseover: \"tip('Copy the label')\" }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-trash\",\n              attrs: {\n                id: \"labelRemoveSingle\",\n                onmouseover: \"tip('Remove the label')\"\n              }\n            })\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"riverEditor\" }\n          },\n          [\n            _c(\"button\", {\n              staticClass: \"icon-sort-alt-up\",\n              attrs: {\n                id: \"riverWidth\",\n                onmouseover: \"tip('Change river width and widening')\",\n                onclick:\n                  '$(\"#riverEditor > *\").not(this).not(\"#riverResizeButtons\").toggle();'\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"riverWidthButtons\" }\n              },\n              [\n                _c(\"i\", {\n                  staticClass: \"icon-w\",\n                  attrs: {\n                    id: \"riverWidthIcon\",\n                    onmouseover: \"tip('Change river width')\"\n                  }\n                }),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"riverWidthInput\",\n                    onmouseover: \"tip('Change river width')\",\n                    value: \"1\",\n                    type: \"range\",\n                    min: \"0.2\",\n                    max: \"5\",\n                    step: \"0.1\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-i\",\n                  attrs: {\n                    id: \"riverIncrementIcon\",\n                    onmouseover:\n                      \"tip('Change river bed increment (widening speed)')\"\n                  }\n                }),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"riverIncrement\",\n                    onmouseover:\n                      \"tip('Change river bed increment (widening speed)')\",\n                    value: \"1\",\n                    type: \"range\",\n                    min: \"0.02\",\n                    max: \"2\",\n                    step: \"0.02\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-shuffle\",\n              attrs: {\n                id: \"riverRegenerate\",\n                onmouseover: \"tip('Regenerate river')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-ccw\",\n              attrs: {\n                id: \"riverResize\",\n                onmouseover:\n                  \"tip('Visually transform (rotate, rescale) river')\",\n                onclick:\n                  '$(\"#riverEditor > *\").not(this).not(\"#riverWidthButtons\").toggle();'\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"riverResizeButtons\" }\n              },\n              [\n                _c(\"i\", {\n                  staticClass: \"icon-a\",\n                  attrs: {\n                    id: \"riverAngleIcon\",\n                    onmouseover: \"tip('Rotate river (set angle)')\"\n                  }\n                }),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"riverAngle\",\n                    onmouseover: \"tip('Rotate river (set angle)')\",\n                    value: \"0\",\n                    type: \"range\",\n                    min: \"-90\",\n                    max: \"90\",\n                    step: \"0.2\"\n                  }\n                }),\n                _c(\"span\", { attrs: { id: \"riverAngleValue\" } }, [\n                  _vm._v(\"0Â°\")\n                ]),\n                _c(\"i\", {\n                  staticClass: \"icon-s\",\n                  attrs: {\n                    id: \"riverScaleIcon\",\n                    onmouseover: \"tip('Change river scale')\"\n                  }\n                }),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"riverScale\",\n                    onmouseover: \"tip('Change river scale')\",\n                    value: \"1\",\n                    type: \"number\",\n                    min: \"0.1\",\n                    max: \"3\",\n                    step: \"0.01\"\n                  }\n                }),\n                _c(\"span\", {\n                  staticClass: \"icon-cancel pointer\",\n                  attrs: {\n                    id: \"riverReset\",\n                    onmouseover: \"tip('Reset transformation to default')\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-clone\",\n              attrs: { id: \"riverCopy\", onmouseover: \"tip('Copy river')\" }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-edit\",\n              attrs: {\n                id: \"riverLegend\",\n                onmouseover:\n                  \"tip('Edit free text notes (legend) for the river')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-map-pin\",\n              attrs: {\n                id: \"riverNew\",\n                onmouseover: \"tip('Create new river clicking on map')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-trash\",\n              attrs: { id: \"riverRemove\", onmouseover: \"tip('Remove river')\" }\n            })\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"routeEditor\" }\n          },\n          [\n            _c(\"button\", {\n              staticClass: \"icon-map-signs\",\n              attrs: {\n                id: \"routeGroups\",\n                onmouseover: \"tip('Change path group')\",\n                onclick: \"$('#routeEditor').children().not(this).toggle()\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"routeGroupsSelection\" }\n              },\n              [\n                _c(\n                  \"select\",\n                  {\n                    attrs: {\n                      id: \"routeGroup\",\n                      onmouseover: \"tip('Select a group for this route')\"\n                    }\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"roads\", selected: \"\" } }, [\n                      _vm._v(\"roads\")\n                    ])\n                  ]\n                )\n              ]\n            ),\n            _c(\"button\", { attrs: { id: \"routeLength\" } }, [_vm._v(\"0\")]),\n            _c(\"button\", {\n              staticClass: \"icon-unlink\",\n              attrs: {\n                id: \"routeSplit\",\n                onmouseover:\n                  \"tip('Click on a control point to split the route')\",\n                onclick: \"$(this).toggleClass('pressed')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-edit\",\n              attrs: {\n                id: \"routeLegend\",\n                onmouseover:\n                  \"tip('Edit free text notes (legend) for the route')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-map-pin\",\n              attrs: {\n                id: \"routeNew\",\n                onmouseover: \"tip('Create new route clicking on map')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-trash\",\n              attrs: { id: \"routeRemove\", onmouseover: \"tip('Remove route')\" }\n            })\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"iconEditor\" }\n          },\n          [\n            _c(\"button\", {\n              staticClass: \"icon-tags\",\n              attrs: {\n                id: \"iconGroups\",\n                onmouseover: \"tip('Change icon group')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"iconGroupsSelection\" }\n              },\n              [\n                _c(\"select\", {\n                  attrs: {\n                    id: \"iconGroup\",\n                    onmouseover: \"tip('Select a group for this icon')\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-trash pointer\",\n                  attrs: {\n                    id: \"iconRemoveGroup\",\n                    onmouseover: \"tip('Remove selected icon group')\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"editButton icon-brush\",\n              attrs: {\n                id: \"iconColors\",\n                onmouseover: \"tip('Change icon colors')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"iconColorsSection\" }\n              },\n              [\n                _c(\"i\", {\n                  staticClass: \"icon-f\",\n                  attrs: { onmouseover: \"tip('Change group fill color')\" }\n                }),\n                _c(\"input\", {\n                  staticClass: \"editColor\",\n                  attrs: {\n                    id: \"iconFillColor\",\n                    onmouseover: \"tip('Change group fill color')\",\n                    type: \"color\",\n                    value: \"#000000\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-s\",\n                  attrs: { onmouseover: \"tip('Change group stroke color')\" }\n                }),\n                _c(\"input\", {\n                  staticClass: \"editColor\",\n                  attrs: {\n                    id: \"iconStrokeColor\",\n                    onmouseover: \"tip('Change group stroke color')\",\n                    type: \"color\",\n                    value: \"#000000\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-resize-full\",\n              attrs: {\n                id: \"iconSetSize\",\n                onmouseover: \"tip('Change group size')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"iconSizeSection\" }\n              },\n              [\n                _c(\"i\", {\n                  staticClass: \"icon-s\",\n                  attrs: { onmouseover: \"tip('Change size for group icon')\" }\n                }),\n                _c(\"input\", {\n                  staticClass: \"editRange\",\n                  attrs: {\n                    id: \"iconSize\",\n                    onmouseover: \"tip('Change size for group icon')\",\n                    type: \"range\",\n                    value: \"1\",\n                    min: \".5\",\n                    max: \"10\",\n                    step: \".05\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-w\",\n                  attrs: { onmouseover: \"tip('Change group stroke-width')\" }\n                }),\n                _c(\"input\", {\n                  staticClass: \"editNumber\",\n                  attrs: {\n                    id: \"iconStrokeWidth\",\n                    onmouseover: \"tip('Change group stroke-width')\",\n                    type: \"number\",\n                    value: \"1\",\n                    min: \"0\",\n                    max: \"5\",\n                    step: \".02\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-clone\",\n              attrs: { id: \"iconCopy\", onmouseover: \"tip('Copy the icon')\" }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-trash\",\n              attrs: { id: \"iconRemove\", onmouseover: \"tip('Remove icon')\" }\n            })\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"reliefEditor\" }\n          },\n          [\n            _c(\"button\", {\n              staticClass: \"icon-tags\",\n              attrs: {\n                id: \"reliefGroups\",\n                onmouseover: \"tip('Change relief icon')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"reliefGroupsSelection\" }\n              },\n              [\n                _c(\n                  \"select\",\n                  {\n                    attrs: {\n                      id: \"reliefGroup\",\n                      onmouseover: \"tip('Change relief icon')\"\n                    }\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"mounts\", selected: \"\" } }, [\n                      _vm._v(\"mounts\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"hills\" } }, [\n                      _vm._v(\"hills\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"swamps\" } }, [\n                      _vm._v(\"swamps\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"forests\" } }, [\n                      _vm._v(\"forests\")\n                    ])\n                  ]\n                ),\n                _c(\"i\", {\n                  staticClass: \"icon-trash pointer\",\n                  attrs: {\n                    id: \"reliefRemoveGroup\",\n                    onmouseover: \"tip('Remove all icons within selected group')\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-clone\",\n              attrs: {\n                id: \"reliefCopy\",\n                onmouseover: \"tip('Copy the relief icon')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-plus\",\n              attrs: {\n                id: \"reliefAddfromEditor\",\n                onmouseover: \"tip('Add relief Icon')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-eraser\",\n              attrs: {\n                id: \"reliefBulkRemove\",\n                onmouseover: \"tip('Erase all relief icons in radius')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"reliefBulkRemoveSection\" }\n              },\n              [\n                _c(\"input\", {\n                  attrs: {\n                    id: \"reliefBulkRemoveRadius\",\n                    oninput:\n                      \"tip('Eraser brush size: '+this.value); reliefBulkRemoveRadiusNumber.value = this.value\",\n                    type: \"range\",\n                    min: \"1\",\n                    max: \"7\",\n                    value: \"3\"\n                  }\n                }),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"reliefBulkRemoveRadiusNumber\",\n                    oninput:\n                      \"tip('Eraser brush size: '+this.value); reliefBulkRemoveRadius.value = this.value\",\n                    type: \"number\",\n                    min: \"1\",\n                    max: \"7\",\n                    value: \"3\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-trash\",\n              attrs: {\n                id: \"reliefRemove\",\n                onmouseover: \"tip('Remove this relief icon')\"\n              }\n            })\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"burgEditor\" }\n          },\n          [\n            _c(\"button\", {\n              staticClass: \"icon-tags\",\n              attrs: {\n                id: \"burgGroup\",\n                onmouseover: \"tip('Change Burg Group')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"burgGroupSection\" }\n              },\n              [\n                _c(\"select\", {\n                  staticStyle: { width: \"117px\" },\n                  attrs: {\n                    id: \"burgSelectGroup\",\n                    onmouseover: \"tip('Select a Group for this Burg')\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticStyle: { display: \"none\", width: \"113px\" },\n                  attrs: {\n                    id: \"burgInputGroup\",\n                    placeholder: \"type new Group name\",\n                    onmouseover: \"tip('Create new Group for the Burg')\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-plus pointer\",\n                  attrs: {\n                    id: \"burgAddGroup\",\n                    onmouseover: \"tip('Create new Group for the Burg')\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-trash pointer\",\n                  attrs: {\n                    id: \"burgRemoveGroup\",\n                    onmouseover: \"tip('Remove selected Burg Group')\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-map-signs\",\n              attrs: {\n                id: \"burgEditLabel\",\n                onmouseover: \"tip('Change label for the Burg Group')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"burgEditLabelSection\" }\n              },\n              [\n                _c(\"button\", {\n                  staticClass: \"icon-pencil\",\n                  attrs: {\n                    id: \"burgName\",\n                    onmouseover: \"tip('Change Burg name')\"\n                  }\n                }),\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { display: \"none\" },\n                    attrs: { id: \"burgNameSection\" }\n                  },\n                  [\n                    _c(\"input\", {\n                      staticStyle: { width: \"117px\" },\n                      attrs: {\n                        id: \"burgNameInput\",\n                        onmouseover: \"tip('Populate to rename the Burg')\"\n                      }\n                    }),\n                    _c(\"span\", {\n                      staticClass: \"icon-book pointer\",\n                      attrs: {\n                        id: \"burgNameReCulture\",\n                        onmouseover:\n                          \"tip('Generate culture-specific name for the Burg')\"\n                      }\n                    }),\n                    _c(\"span\", {\n                      staticClass: \"icon-globe pointer\",\n                      attrs: {\n                        id: \"burgNameReRandom\",\n                        onmouseover: \"tip('Generate random name for the Burg')\"\n                      }\n                    })\n                  ]\n                ),\n                _c(\"button\", {\n                  staticClass: \"icon-font\",\n                  attrs: {\n                    id: \"burgSelectFont\",\n                    onmouseover: \"tip('Select font for the Burg Group label')\"\n                  }\n                }),\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { display: \"none\" },\n                    attrs: { id: \"burgSelectFontSection\" }\n                  },\n                  [\n                    _c(\"i\", {\n                      staticClass: \"icon-link pointer\",\n                      attrs: {\n                        id: \"burgToggleExternalFont\",\n                        onmouseover:\n                          \"tip('Fetch fonts by linking @font-face declaration, just populate with font name if using Google font (fonts.google.com)')\"\n                      }\n                    }),\n                    _c(\"input\", {\n                      staticStyle: { display: \"none\", width: \"113px\" },\n                      attrs: {\n                        id: \"burgInputExternalFont\",\n                        placeholder: \"link to @font-face\",\n                        onmouseover:\n                          \"tip('Fetch fonts by linking @font-face declaration')\"\n                      }\n                    }),\n                    _c(\"select\", {\n                      staticStyle: { width: \"117px\" },\n                      attrs: {\n                        id: \"burgSelectDefaultFont\",\n                        onmouseover: \"tip('Select a font for the Group')\"\n                      }\n                    })\n                  ]\n                ),\n                _c(\"button\", {\n                  staticClass: \"icon-text-height\",\n                  attrs: {\n                    id: \"burgSetFontSize\",\n                    onmouseover: \"tip('Set font size for the Burg Group label')\"\n                  }\n                }),\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { display: \"none\" },\n                    attrs: { id: \"burgFontSizeSection\" }\n                  },\n                  [\n                    _c(\"input\", {\n                      staticStyle: { width: \"117px\" },\n                      attrs: {\n                        id: \"burgSetLabelSize\",\n                        onmouseover:\n                          \"tip('Set font size for the Burg Group label')\",\n                        value: \"14\",\n                        type: \"number\",\n                        min: \"1\",\n                        max: \"100\",\n                        step: \".5\"\n                      }\n                    })\n                  ]\n                ),\n                _c(\"button\", {\n                  staticClass: \"icon-brush\",\n                  attrs: {\n                    id: \"burgLabelColor\",\n                    onmouseover: \"tip('Set label color for the Burg Group')\"\n                  }\n                }),\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { display: \"none\" },\n                    attrs: { id: \"burgLabelColorSection\" }\n                  },\n                  [\n                    _c(\"input\", {\n                      staticClass: \"editColor\",\n                      attrs: {\n                        onmouseover:\n                          \"tip('Set label color for the Burg Group')\",\n                        id: \"burgLabelColorInput\",\n                        type: \"color\",\n                        value: \"#3e3e4b\"\n                      }\n                    }),\n                    _c(\"i\", {\n                      staticClass: \"icon-adjust\",\n                      attrs: {\n                        onmouseover:\n                          \"tip('Set label opacity for the Burg Group')\"\n                      }\n                    }),\n                    _c(\"input\", {\n                      attrs: {\n                        onmouseover:\n                          \"tip('Set label opacity for the Burg Group')\",\n                        id: \"burgLabelOpacity\",\n                        value: \"1\",\n                        type: \"number\",\n                        min: \"0\",\n                        max: \"1\",\n                        step: \"0.02\"\n                      }\n                    })\n                  ]\n                ),\n                _c(\"button\", {\n                  staticClass: \"icon-ccw\",\n                  attrs: {\n                    id: \"burgLabelRotation\",\n                    onmouseover: \"tip('Rotate the label')\"\n                  }\n                }),\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { display: \"none\", width: \"142px\" },\n                    attrs: { id: \"burgLabelRotationSection\" }\n                  },\n                  [\n                    _c(\"input\", {\n                      staticStyle: { width: \"98px\" },\n                      attrs: {\n                        id: \"burgLabelAngle\",\n                        value: \"0\",\n                        type: \"range\",\n                        min: \"-90\",\n                        max: \"90\",\n                        step: \"0.2\"\n                      }\n                    }),\n                    _c(\"output\", { attrs: { id: \"burgLabelAngleOutput\" } }, [\n                      _vm._v(\"0Â°\")\n                    ])\n                  ]\n                )\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-fort-awesome\",\n              attrs: {\n                id: \"burgEditIcon\",\n                onmouseover: \"tip('Change icon for the Burg Group')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"burgEditIconSection\" }\n              },\n              [\n                _c(\"button\", {\n                  staticClass: \"icon-dot-circled\",\n                  attrs: {\n                    id: \"burgIconFill\",\n                    onmouseover: \"tip('Change icon fill')\"\n                  }\n                }),\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { display: \"none\" },\n                    attrs: { id: \"burgIconFillSection\" }\n                  },\n                  [\n                    _c(\"i\", {\n                      staticClass: \"icon-resize-full\",\n                      attrs: { onmouseover: \"tip('Change icon size')\" }\n                    }),\n                    _c(\"input\", {\n                      staticClass: \"editRange\",\n                      staticStyle: { width: \"60px\" },\n                      attrs: {\n                        id: \"burgIconSize\",\n                        onmouseover: \"tip('Change icon size')\",\n                        type: \"range\",\n                        value: \"1\",\n                        min: \".1\",\n                        max: \"5\",\n                        step: \".05\"\n                      }\n                    }),\n                    _c(\"i\", {\n                      staticClass: \"icon-adjust\",\n                      attrs: { onmouseover: \"tip('Set icon fill opacity')\" }\n                    }),\n                    _c(\"input\", {\n                      staticStyle: { width: \"40px\" },\n                      attrs: {\n                        id: \"burgIconFillOpacity\",\n                        onmouseover: \"tip('Set icon fill opacity')\",\n                        value: \"1\",\n                        type: \"number\",\n                        min: \"0\",\n                        max: \"1\",\n                        step: \"0.02\"\n                      }\n                    }),\n                    _c(\"input\", {\n                      staticClass: \"editColor\",\n                      attrs: {\n                        id: \"burgIconFillColor\",\n                        onmouseover: \"tip('Change icon fill color')\",\n                        type: \"color\",\n                        value: \"#000000\"\n                      }\n                    })\n                  ]\n                ),\n                _c(\"button\", {\n                  staticClass: \"icon-circle-empty\",\n                  attrs: {\n                    id: \"burgIconStroke\",\n                    onmouseover: \"tip('Change icon stroke')\"\n                  }\n                }),\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { display: \"none\" },\n                    attrs: { id: \"burgIconStrokeSection\" }\n                  },\n                  [\n                    _c(\"i\", {\n                      staticClass: \"icon-resize-horizontal\",\n                      attrs: { onmouseover: \"tip('Change icon stroke width')\" }\n                    }),\n                    _c(\"input\", {\n                      staticStyle: { width: \"40px\" },\n                      attrs: {\n                        id: \"burgIconStrokeWidth\",\n                        onmouseover: \"tip('Change icon stroke width')\",\n                        type: \"number\",\n                        value: \"1\",\n                        min: \"0\",\n                        max: \"2\",\n                        step: \".02\"\n                      }\n                    }),\n                    _c(\"i\", {\n                      staticClass: \"icon-adjust\",\n                      attrs: { onmouseover: \"tip('Set icon stroke opacity')\" }\n                    }),\n                    _c(\"input\", {\n                      staticStyle: { width: \"40px\" },\n                      attrs: {\n                        id: \"burgIconStrokeOpacity\",\n                        onmouseover: \"tip('Set icon stroke opacity')\",\n                        value: \"1\",\n                        type: \"number\",\n                        min: \"0\",\n                        max: \"1\",\n                        step: \"0.02\"\n                      }\n                    }),\n                    _c(\"input\", {\n                      staticClass: \"editColor\",\n                      attrs: {\n                        id: \"burgIconStrokeColor\",\n                        onmouseover: \"tip('Change icon stroke color')\",\n                        type: \"color\",\n                        value: \"#000000\"\n                      }\n                    })\n                  ]\n                )\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-cog-alt\",\n              attrs: {\n                id: \"burgFeatures\",\n                onmouseover: \"tip('Change Burg features')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"burgFeaturesSection\" }\n              },\n              [\n                _c(\"button\", {\n                  staticClass: \"icon-star\",\n                  attrs: {\n                    id: \"burgToggleCapital\",\n                    onmouseover:\n                      \"tip('Mark the Burg as country capital. Neutral burg cannot be a capital')\"\n                  }\n                }),\n                _c(\"button\", {\n                  staticClass: \"icon-anchor\",\n                  attrs: {\n                    id: \"burgTogglePort\",\n                    onmouseover:\n                      \"tip('Mark the Burg as port (toggle anchor icon)')\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-users\",\n                  attrs: { onmouseover: \"tip('Set Burg population')\" }\n                }),\n                _c(\"input\", {\n                  staticStyle: { width: \"40px\" },\n                  attrs: {\n                    id: \"burgPopulation\",\n                    onmouseover:\n                      \"tip('Set Burg population (in population points)')\",\n                    type: \"number\",\n                    value: \"1\",\n                    min: \"0\",\n                    step: \"1\"\n                  }\n                }),\n                _c(\n                  \"output\",\n                  {\n                    attrs: {\n                      id: \"burgPopulationFriendly\",\n                      onmouseover: \"tip('Burg population (in people)')\"\n                    }\n                  },\n                  [_vm._v(\"\\n        1000\\n      \")]\n                )\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-map\",\n              attrs: {\n                id: \"burgSeeInMFCG\",\n                onmouseover:\n                  \"tip('See the burg representation in Medieval Fantasy City Generator by watabou')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-target\",\n              attrs: {\n                id: \"burgRelocate\",\n                onmouseover: \"tip('Move burg to a different cell')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-edit\",\n              attrs: {\n                id: \"burglLegend\",\n                onmouseover:\n                  \"tip('Edit free text notes (legend) for this burg')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-plus\",\n              attrs: {\n                id: \"burgAddfromEditor\",\n                onmouseover: \"tip('Add new Burg')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-trash\",\n              attrs: { id: \"burgRemove\", onmouseover: \"tip('Remove the Burg')\" }\n            })\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"markerEditor\" }\n          },\n          [\n            _c(\"button\", {\n              staticClass: \"icon-tags\",\n              attrs: {\n                id: \"markerGroup\",\n                onmouseover: \"tip('Change marker type')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"markerGroupSection\" }\n              },\n              [\n                _c(\"select\", {\n                  staticStyle: { width: \"117px\" },\n                  attrs: {\n                    id: \"markerSelectGroup\",\n                    onmouseover: \"tip('Select type for the selected marker')\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticStyle: { display: \"none\", width: \"113px\" },\n                  attrs: {\n                    id: \"markerInputGroup\",\n                    placeholder: \"type new type name\",\n                    onmouseover: \"tip('Create new type for selected marker')\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-plus pointer\",\n                  attrs: {\n                    id: \"markerAddGroup\",\n                    onmouseover:\n                      \"tip('Pick out selected marker into a new type')\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-trash pointer\",\n                  attrs: {\n                    id: \"markerRemoveGroup\",\n                    onmouseover: \"tip('Remove all markers of that type')\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-star\",\n              attrs: {\n                id: \"markerIconButton\",\n                onmouseover: \"tip('Change marker icon and edit positioning')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"markerIconButtons\" }\n              },\n              [\n                _c(\"i\", {\n                  staticClass: \"icon-resize-full\",\n                  attrs: { onmouseover: \"tip('Change marker icon size')\" }\n                }),\n                _c(\"input\", {\n                  staticClass: \"editRange\",\n                  attrs: {\n                    id: \"markerIconSize\",\n                    onmouseover: \"tip('Change marker icon size')\",\n                    value: \"22\",\n                    type: \"range\",\n                    min: \"10\",\n                    max: \"30\",\n                    step: \"0.5\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-resize-horizontal\",\n                  attrs: {\n                    onmouseover: \"tip('Change marker horizontal shift')\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticStyle: { width: \"38px\" },\n                  attrs: {\n                    id: \"markerIconShiftX\",\n                    onmouseover: \"tip('Change marker horizontal shift')\",\n                    value: \"50\",\n                    type: \"number\",\n                    min: \"0\",\n                    max: \"100\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-resize-vertical\",\n                  attrs: { onmouseover: \"tip('Change marker vertical shift')\" }\n                }),\n                _c(\"input\", {\n                  staticStyle: { width: \"38px\" },\n                  attrs: {\n                    id: \"markerIconShiftY\",\n                    onmouseover: \"tip('Change marker vertical shift')\",\n                    value: \"50\",\n                    type: \"number\",\n                    min: \"0\",\n                    max: \"100\"\n                  }\n                }),\n                _c(\"i\", {\n                  staticClass: \"icon-pencil\",\n                  attrs: {\n                    onmouseover:\n                      \"tip('Paste custom unicode symbol to use as icon')\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticStyle: { width: \"38px\" },\n                  attrs: {\n                    id: \"markerIconCustom\",\n                    onmouseover:\n                      \"tip('Paste custom unicode symbol to use as icon')\"\n                  }\n                }),\n                _c(\"table\", { attrs: { id: \"markerIconTable\" } }),\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { \"font-style\": \"italic\", color: \"darkgrey\" }\n                  },\n                  [\n                    _vm._v(\n                      \"Please note icons look different in\\n        different browsers!\\n      \"\n                    )\n                  ]\n                )\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-brush\",\n              attrs: {\n                id: \"markerStyleButton\",\n                onmouseover: \"tip('Change marker size and colors')\"\n              }\n            }),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"markerStyleButtons\" }\n              },\n              [\n                _c(\"i\", {\n                  staticClass: \"icon-map-pin\",\n                  attrs: { onmouseover: \"tip('Change marker base style')\" }\n                }),\n                _vm._v(\":\\n      \"),\n                _c(\"input\", {\n                  staticClass: \"editRange\",\n                  attrs: {\n                    id: \"markerSize\",\n                    onmouseover: \"tip('Change marker size')\",\n                    value: \"1\",\n                    type: \"range\",\n                    min: \"0.1\",\n                    max: \"10\",\n                    step: \"0.2\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticClass: \"editColor\",\n                  attrs: {\n                    id: \"markerBase\",\n                    onmouseover: \"tip('Change marker base color')\",\n                    type: \"color\",\n                    value: \"#ffffff\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticClass: \"editColor\",\n                  attrs: {\n                    id: \"markerFill\",\n                    onmouseover: \"tip('Change marker fill color')\",\n                    type: \"color\",\n                    value: \"#000000\"\n                  }\n                }),\n                _c(\"br\"),\n                _c(\"i\", {\n                  staticClass: \"icon-star\",\n                  attrs: { onmouseover: \"tip('Change marker icon style')\" }\n                }),\n                _vm._v(\":\\n      \"),\n                _c(\"input\", {\n                  staticClass: \"editColor\",\n                  attrs: {\n                    id: \"markerIconFill\",\n                    onmouseover: \"tip('Change marker icon fill color')\",\n                    type: \"color\",\n                    value: \"#000000\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticStyle: { width: \"40px\" },\n                  attrs: {\n                    id: \"markerIconStrokeWidth\",\n                    onmouseover: \"tip('Change marker icon stroke width')\",\n                    value: \"0\",\n                    type: \"number\",\n                    min: \"0\",\n                    max: \"2\",\n                    step: \"0.1\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticClass: \"editColor\",\n                  attrs: {\n                    id: \"markerIconStroke\",\n                    onmouseover: \"tip('Change marker icon stroke color')\",\n                    type: \"color\",\n                    value: \"#000000\"\n                  }\n                })\n              ]\n            ),\n            _c(\"button\", {\n              staticClass: \"icon-info-circled\",\n              attrs: {\n                id: \"markerToggleBubble\",\n                onmouseover: \"tip('Toggle marker bubble display')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-edit\",\n              attrs: {\n                id: \"markerLegendButton\",\n                onmouseover: \"tip('Edit place legend (free text notes)')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-plus\",\n              attrs: {\n                id: \"markerAdd\",\n                onmouseover: \"tip('Add additional marker of that type')\"\n              }\n            }),\n            _c(\"button\", {\n              staticClass: \"icon-trash\",\n              attrs: {\n                id: \"markerRemove\",\n                onmouseover: \"tip('Remove the marker')\"\n              }\n            })\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog stable\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"templateEditor\" }\n          },\n          [\n            _c(\"div\", { attrs: { id: \"templateTop\" } }, [\n              _vm._v(\"\\n      Base template: \"),\n              _c(\n                \"select\",\n                {\n                  attrs: {\n                    id: \"templateSelect\",\n                    \"data-prev\": \"templateCustom\",\n                    onmouseover: \"tip('Select base template')\"\n                  }\n                },\n                [\n                  _c(\n                    \"option\",\n                    { attrs: { value: \"templateCustom\", selected: \"\" } },\n                    [_vm._v(\"Custom\")]\n                  ),\n                  _c(\"option\", { attrs: { value: \"templateVolcano\" } }, [\n                    _vm._v(\"Volcano\")\n                  ]),\n                  _c(\"option\", { attrs: { value: \"templateHighIsland\" } }, [\n                    _vm._v(\"High Island\")\n                  ]),\n                  _c(\"option\", { attrs: { value: \"templateLowIsland\" } }, [\n                    _vm._v(\"Low Island\")\n                  ]),\n                  _c(\"option\", { attrs: { value: \"templateContinents\" } }, [\n                    _vm._v(\"Continents\")\n                  ]),\n                  _c(\"option\", { attrs: { value: \"templateArchipelago\" } }, [\n                    _vm._v(\"Archipelago\")\n                  ]),\n                  _c(\"option\", { attrs: { value: \"templateAtoll\" } }, [\n                    _vm._v(\"Atoll\")\n                  ]),\n                  _c(\"option\", { attrs: { value: \"templateMainland\" } }, [\n                    _vm._v(\"Mainland\")\n                  ]),\n                  _c(\"option\", { attrs: { value: \"templatePeninsulas\" } }, [\n                    _vm._v(\"Peninsulas\")\n                  ])\n                ]\n              )\n            ]),\n            _c(\"div\", { attrs: { id: \"templateTools\" } }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"templateMountain\",\n                    onmouseover:\n                      \"tip('Mountain: high big blob. Can be placed only once and only as a first step')\"\n                  }\n                },\n                [_vm._v(\"M\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"templateHill\",\n                    onmouseover: \"tip('Hill: small blob')\"\n                  }\n                },\n                [_vm._v(\"H\")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"templatePit\",\n                    onmouseover: \"tip('Pit: round depression')\"\n                  }\n                },\n                [_vm._v(\"P\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"templateRange\",\n                    onmouseover: \"tip('Range: elongated elevation')\"\n                  }\n                },\n                [_vm._v(\"\\n        R\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"templateTrough\",\n                    onmouseover: \"tip('Trough: elongated depression')\"\n                  }\n                },\n                [_vm._v(\"T\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"templateStrait\",\n                    onmouseover: \"tip('Strait: centered vertical depression')\"\n                  }\n                },\n                [_vm._v(\"S\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"templateAdd\",\n                    onmouseover: \"tip('Add or subtract value from all heights')\"\n                  }\n                },\n                [_vm._v(\"+\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"templateMultiply\",\n                    onmouseover: \"tip('Multiply all heights by factor')\"\n                  }\n                },\n                [_vm._v(\"*\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"templateSmooth\",\n                    onmouseover:\n                      \"tip('Smooth the map replacing cell heights by an average values of its neighbors')\"\n                  }\n                },\n                [_vm._v(\"~\\n      \")]\n              )\n            ]),\n            _c(\"div\", { attrs: { id: \"templateBody\", \"data-changed\": \"0\" } }, [\n              _c(\"div\", { attrs: { \"data-type\": \"Mountain\" } }, [\n                _vm._v(\"Mountain\\n        \"),\n                _c(\"span\", {\n                  staticClass: \"icon-trash-empty\",\n                  attrs: {\n                    onmouseover: \"tip('Remove step')\",\n                    onclick:\n                      \"this.parentNode.parentNode.removeChild(this.parentNode)\"\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { attrs: { id: \"templateBottom\" } }, [\n              _c(\"button\", {\n                staticClass: \"icon-play-circled2\",\n                attrs: {\n                  id: \"templateRun\",\n                  onmouseover: \"tip('Apply current template')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-ccw\",\n                attrs: {\n                  id: \"templateUndo\",\n                  onmouseover: \"tip('Undo the latest action')\",\n                  disabled: \"\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-cw\",\n                attrs: {\n                  id: \"templateRedo\",\n                  onmouseover: \"tip('Redo the action')\",\n                  disabled: \"\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-check\",\n                attrs: {\n                  id: \"templateComplete\",\n                  onmouseover:\n                    \"tip('Finalize the Heightmap. Not allowed if insufficient land area available')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-download\",\n                attrs: {\n                  id: \"templateSave\",\n                  onmouseover: \"tip('Save template')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-upload\",\n                attrs: {\n                  id: \"templateLoad\",\n                  onmouseover: \"tip('Open previously saved template')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-mail-alt\",\n                attrs: {\n                  id: \"templateMail\",\n                  onclick:\n                    \"window.open('mailto:maxganiev@yandex.com?Subject=Template%20suggestion', '_blank')\",\n                  onmouseover: \"tip('Send a template suggestion to me')\"\n                }\n              })\n            ])\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog stable\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"imageConverter\" }\n          },\n          [\n            _c(\"div\", { attrs: { id: \"convertImageButtons\" } }, [\n              _c(\"button\", {\n                staticClass: \"icon-upload\",\n                attrs: {\n                  id: \"convertImageLoad\",\n                  onmouseover: \"tip('Load image to convert')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-adjust\",\n                attrs: {\n                  id: \"convertAutoLum\",\n                  onmouseover: \"tip('Auto-assign colors based on liminosity')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-brush\",\n                attrs: {\n                  id: \"convertAutoHue\",\n                  onmouseover: \"tip('Auto-assign colors based on hue')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-minus-squared\",\n                attrs: {\n                  id: \"convertColorsMinus\",\n                  onmouseover:\n                    \"tip('Reduce the number of colors. Minimal number is 3')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-plus-squared\",\n                attrs: {\n                  id: \"convertColorsPlus\",\n                  onmouseover:\n                    \"tip('Increase the number of colors. Maximum number is 256')\"\n                }\n              }),\n              _c(\"input\", {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"convertColors\", value: \"12\" }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-eye\",\n                attrs: {\n                  id: \"convertImageGrid\",\n                  onmouseover: \"tip('Toggle grid')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-clone\",\n                attrs: {\n                  id: \"convertOverlayButton\",\n                  onmouseover: \"tip('Change overlay opacity')\"\n                }\n              }),\n              _c(\"input\", {\n                staticStyle: { display: \"none\" },\n                attrs: {\n                  id: \"convertOverlay\",\n                  onmouseover: \"tip('Change overlay opacity')\",\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"1\",\n                  step: \"0.01\",\n                  value: \"0\"\n                }\n              }),\n              _c(\n                \"span\",\n                {\n                  staticStyle: { display: \"none\" },\n                  attrs: {\n                    id: \"convertOverlayValue\",\n                    onmouseover: \"tip('Overlay opacity')\"\n                  }\n                },\n                [_vm._v(\"0\")]\n              ),\n              _c(\"button\", {\n                staticClass: \"icon-check\",\n                attrs: {\n                  id: \"convertComplete\",\n                  onmouseover:\n                    \"tip('Complete conversion. All unassigned colors will be considered as ocean')\"\n                }\n              })\n            ]),\n            _c(\"div\", { attrs: { id: \"colorsSelect\" } }, [\n              _c(\"div\", { attrs: { id: \"colorScheme\" } }),\n              _c(\"span\", { attrs: { id: \"colorsSelectValue\" } }, [_vm._v(\"0\")])\n            ]),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"colorsAssigned\" }\n              },\n              [_c(\"label\", [_vm._v(\"Assigned colors: \")]), _c(\"br\")]\n            ),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"none\" },\n                attrs: { id: \"colorsUnassigned\" }\n              },\n              [_c(\"label\", [_vm._v(\"Unassigned colors: \")]), _c(\"br\")]\n            )\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog stable\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"brushesPanel\" }\n          },\n          [\n            _c(\"div\", { attrs: { id: \"brushesButtons\" } }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"brushElevate\",\n                    onmouseover:\n                      \"tip('Click and drag the map to increase cells elevation')\"\n                  }\n                },\n                [_vm._v(\"â¥\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"brushDepress\",\n                    onmouseover:\n                      \"tip('Click and drag the map to decrease cells elevation')\"\n                  }\n                },\n                [_vm._v(\"â§\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"brushAlign\",\n                    onmouseover:\n                      \"tip('Click and drag the map to align cells elevation')\"\n                  }\n                },\n                [_vm._v(\"=\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"noicon\",\n                  attrs: {\n                    id: \"brushSmooth\",\n                    onmouseover:\n                      \"tip('Click and drag the map to smooth cells elevation')\"\n                  }\n                },\n                [_vm._v(\"~\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"feature noicon\",\n                  attrs: {\n                    id: \"brushHill\",\n                    onmouseover: \"tip('Click on the map to place a Hill')\"\n                  }\n                },\n                [_vm._v(\"H\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"feature noicon\",\n                  attrs: {\n                    id: \"brushPit\",\n                    onmouseover: \"tip('Click on the map to place a Pit')\"\n                  }\n                },\n                [_vm._v(\"P\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"feature noicon\",\n                  attrs: {\n                    id: \"brushRange\",\n                    onmouseover: \"tip('Select two points to place a Range')\"\n                  }\n                },\n                [_vm._v(\"R\\n      \")]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"feature noicon\",\n                  attrs: {\n                    id: \"brushTrough\",\n                    onmouseover: \"tip('Select two points to place a Trought')\"\n                  }\n                },\n                [_vm._v(\"T\\n      \")]\n              )\n            ]),\n            _c(\"div\", { staticStyle: { display: \"table\" } }, [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"disabled italic\",\n                  attrs: {\n                    id: \"brushRadiusLabel\",\n                    onmouseover:\n                      \"tip('Set the brush effective radius. Works only with 4 brushes above')\"\n                  }\n                },\n                [_vm._v(\"R:\")]\n              ),\n              _c(\"input\", {\n                staticClass: \"disabled\",\n                attrs: {\n                  id: \"brushRadius\",\n                  oninput: \"tip('Brush radius: '+this.value)\",\n                  type: \"range\",\n                  min: \"1\",\n                  max: \"10\",\n                  value: \"3\",\n                  disabled: \"\"\n                }\n              }),\n              _c(\n                \"label\",\n                {\n                  staticClass: \"italic\",\n                  attrs: {\n                    onmouseover:\n                      \"tip('Set the brush power in points of height')\"\n                  }\n                },\n                [_vm._v(\"H:\")]\n              ),\n              _c(\"input\", {\n                attrs: {\n                  id: \"brushPower\",\n                  oninput: \"tip('Brush power: '+this.value)\",\n                  type: \"range\",\n                  min: \"1\",\n                  max: \"30\",\n                  value: \"5\"\n                }\n              })\n            ]),\n            _c(\"div\", { attrs: { id: \"modifyButtons\" } }, [\n              _c(\"button\", {\n                staticClass: \"icon-ccw\",\n                attrs: {\n                  id: \"undo\",\n                  onmouseover: \"tip('Undo the latest action (Ctrl + Z)')\",\n                  disabled: \"\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-cw\",\n                attrs: {\n                  id: \"redo\",\n                  onmouseover: \"tip('Redo the action (Ctrl + Y)')\",\n                  disabled: \"\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-exchange\",\n                attrs: {\n                  id: \"rescaleButton\",\n                  onmouseover: \"tip('Show rescaler slider')\"\n                }\n              }),\n              _c(\"input\", {\n                staticClass: \"hidden\",\n                attrs: {\n                  id: \"rescaler\",\n                  onmouseover: \"tip('Slide to change map height')\",\n                  type: \"range\",\n                  min: \"1\",\n                  max: \"10\",\n                  step: \"0.1\",\n                  value: \"5\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-if\",\n                attrs: {\n                  id: \"rescaleCondButton\",\n                  onmouseover: \"tip('Conditional rescaler')\"\n                }\n              }),\n              _c(\"label\", { staticClass: \"condition hidden\" }, [_vm._v(\"h â¥\")]),\n              _c(\"input\", {\n                staticClass: \"condition hidden\",\n                attrs: {\n                  id: \"rescaleLower\",\n                  onmouseover: \"tip('Set lower threshold')\",\n                  value: \"20\",\n                  type: \"number\",\n                  min: \"0\",\n                  max: \"100\"\n                }\n              }),\n              _c(\"label\", { staticClass: \"condition hidden\" }, [_vm._v(\"â¤\")]),\n              _c(\"input\", {\n                staticClass: \"condition hidden\",\n                attrs: {\n                  id: \"rescaleHigher\",\n                  onmouseover: \"tip('Set higher threshold')\",\n                  value: \"100\",\n                  type: \"number\",\n                  min: \"1\",\n                  max: \"100\"\n                }\n              }),\n              _c(\"label\", { staticClass: \"condition hidden\" }, [_vm._v(\"â\")]),\n              _c(\n                \"select\",\n                {\n                  staticClass: \"condition hidden\",\n                  attrs: { id: \"conditionSign\" }\n                },\n                [\n                  _c(\"option\", { attrs: { value: \"Ã\", selected: \"\" } }, [\n                    _vm._v(\"Ã\")\n                  ]),\n                  _c(\"option\", { attrs: { value: \"Ã·\" } }, [_vm._v(\"Ã·\")]),\n                  _c(\"option\", { attrs: { value: \"+\" } }, [_vm._v(\"+\")]),\n                  _c(\"option\", { attrs: { value: \"-\" } }, [_vm._v(\"-\")]),\n                  _c(\"option\", { attrs: { value: \"^\" } }, [_vm._v(\"^\")])\n                ]\n              ),\n              _c(\"input\", {\n                staticClass: \"condition hidden\",\n                attrs: {\n                  id: \"rescaleModifier\",\n                  onmouseover: \"tip('Set modifier value')\",\n                  type: \"number\",\n                  value: \"0.9\",\n                  min: \"0\",\n                  max: \"1.5\",\n                  step: \"0.01\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-play-circled2 condition hidden\",\n                attrs: {\n                  id: \"rescaleExecute\",\n                  onmouseover: \"tip('Run condition')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-smooth\",\n                attrs: {\n                  id: \"smoothHeights\",\n                  onmouseover: \"tip('Smooth all heights')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-disrupt\",\n                attrs: {\n                  id: \"disruptHeights\",\n                  onmouseover: \"tip('Disrupt (randomize) heights')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-eraser\",\n                attrs: {\n                  id: \"brushClear\",\n                  onmouseover: \"tip('Clear all height')\"\n                }\n              })\n            ])\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog stable\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"perspectivePanel\" }\n          },\n          [\n            _c(\"canvas\", {\n              attrs: { id: \"perspective\", width: \"480\", height: \"150\" }\n            })\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog stable\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"countriesEditor\", \"data-type\": \"absolute\" }\n          },\n          [\n            _c(\"div\", { attrs: { id: \"countriesHeader\" } }, [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable alphabetically\",\n                  staticStyle: { \"margin-left\": \"14px\" },\n                  attrs: {\n                    onmouseover:\n                      \"tip('Click to sort alphabetically by country name')\",\n                    \"data-sortby\": \"country\"\n                  }\n                },\n                [_vm._v(\"CountryÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable alphabetically\",\n                  staticStyle: { \"margin-left\": \"30px\" },\n                  attrs: {\n                    onmouseover:\n                      \"tip('Click to sort alphabetically by capital name')\",\n                    \"data-sortby\": \"capital\"\n                  }\n                },\n                [_vm._v(\"CapitalÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable hidden\",\n                  staticStyle: { \"margin-left\": \"24px\" },\n                  attrs: {\n                    onmouseover:\n                      \"tip('Click to sort by country expansion value')\",\n                    \"data-sortby\": \"expansion\"\n                  }\n                },\n                [_vm._v(\"Expan.Â \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable\",\n                  staticStyle: { \"margin-left\": \"30px\" },\n                  attrs: {\n                    onmouseover: \"tip('Click to sort by country cells count')\",\n                    \"data-sortby\": \"cells\"\n                  }\n                },\n                [_vm._v(\"CellsÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable\",\n                  staticStyle: { \"margin-left\": \"6px\" },\n                  attrs: {\n                    onmouseover: \"tip('Click to sort by country burgs count')\",\n                    \"data-sortby\": \"burgs\"\n                  }\n                },\n                [_vm._v(\"BurgsÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable\",\n                  staticStyle: { \"margin-left\": \"20px\" },\n                  attrs: {\n                    onmouseover: \"tip('Click to sort by country area')\",\n                    \"data-sortby\": \"area\"\n                  }\n                },\n                [_vm._v(\"AreaÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable\",\n                  staticStyle: { \"margin-left\": \"22px\" },\n                  attrs: {\n                    onmouseover: \"tip('Click to sort by country population')\",\n                    \"data-sortby\": \"population\"\n                  }\n                },\n                [_vm._v(\"PopulationÂ \\n      \")]\n              )\n            ]),\n            _c(\"div\", { attrs: { id: \"countriesBody\" } }),\n            _c(\n              \"div\",\n              { staticClass: \"totalLine\", attrs: { id: \"countriesFooter\" } },\n              [\n                _c(\"div\", { staticStyle: { \"margin-left\": \"5px\" } }, [\n                  _vm._v(\"Countries:Â \"),\n                  _c(\"span\", { attrs: { id: \"countriesFooterCountries\" } }, [\n                    _vm._v(\"0\")\n                  ])\n                ]),\n                _c(\"div\", { staticStyle: { \"margin-left\": \"20px\" } }, [\n                  _vm._v(\"Burgs:Â \"),\n                  _c(\"span\", { attrs: { id: \"countriesFooterBurgs\" } }, [\n                    _vm._v(\"0\")\n                  ])\n                ]),\n                _c(\"div\", { staticStyle: { \"margin-left\": \"20px\" } }, [\n                  _vm._v(\"Land Area:Â \"),\n                  _c(\"span\", { attrs: { id: \"countriesFooterArea\" } }, [\n                    _vm._v(\"0\")\n                  ])\n                ]),\n                _c(\"div\", { staticStyle: { \"margin-left\": \"20px\" } }, [\n                  _vm._v(\"Population:Â \"),\n                  _c(\"span\", { attrs: { id: \"countriesFooterPopulation\" } }, [\n                    _vm._v(\"0\")\n                  ])\n                ])\n              ]\n            ),\n            _c(\"div\", { attrs: { id: \"countriesBottom\" } }, [\n              _c(\"button\", {\n                staticClass: \"icon-map-signs\",\n                attrs: {\n                  id: \"editScaleCountries\",\n                  onmouseover:\n                    \"tip('Change demographical and geographical measurements')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-percent\",\n                attrs: {\n                  id: \"countriesPercentage\",\n                  onmouseover: \"tip('Toggle percentage / absolut values views')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-cog-alt\",\n                attrs: {\n                  id: \"countriesRegenerate\",\n                  onmouseover:\n                    \"tip('Regenerate countries based on amended Expansion values')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-brush\",\n                attrs: {\n                  id: \"countriesManually\",\n                  onmouseover: \"tip('Manually re-assign countries')\"\n                }\n              }),\n              _c(\n                \"div\",\n                {\n                  staticStyle: { display: \"none\" },\n                  attrs: { id: \"countriesManuallyButtons\" }\n                },\n                [\n                  _c(\"button\", {\n                    staticClass: \"icon-check\",\n                    attrs: {\n                      id: \"countriesManuallyComplete\",\n                      onmouseover: \"tip('Apply assignment')\"\n                    }\n                  }),\n                  _c(\"button\", {\n                    staticClass: \"icon-flag\",\n                    attrs: {\n                      id: \"countriesAddM\",\n                      onmouseover: \"tip('Proclaim a new country')\"\n                    }\n                  }),\n                  _c(\"button\", {\n                    staticClass: \"icon-cancel\",\n                    attrs: {\n                      id: \"countriesManuallyCancel\",\n                      onmouseover: \"tip('Cancel assignment')\"\n                    }\n                  }),\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"italic\",\n                      attrs: { onmouseover: \"tip('Set the brush size')\" }\n                    },\n                    [_vm._v(\"Brush size:\")]\n                  ),\n                  _c(\"input\", {\n                    attrs: {\n                      id: \"countriesManuallyBrush\",\n                      oninput:\n                        \"tip('Brush size: '+this.value); countriesManuallyBrushNumber.value = this.value\",\n                      type: \"range\",\n                      min: \"1\",\n                      max: \"7\",\n                      value: \"3\"\n                    }\n                  }),\n                  _c(\"input\", {\n                    attrs: {\n                      id: \"countriesManuallyBrushNumber\",\n                      oninput:\n                        \"tip('Brush size: '+this.value); countriesManuallyBrush.value = this.value\",\n                      type: \"number\",\n                      min: \"1\",\n                      max: \"7\",\n                      value: \"3\"\n                    }\n                  })\n                ]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticStyle: { display: \"none\" },\n                  attrs: { id: \"countriesRegenerateButtons\" }\n                },\n                [\n                  _c(\"button\", {\n                    staticClass: \"icon-check\",\n                    attrs: {\n                      id: \"countriesApply\",\n                      onmouseover: \"tip('Apply assignment')\"\n                    }\n                  }),\n                  _c(\"button\", {\n                    staticClass: \"icon-shuffle\",\n                    attrs: {\n                      id: \"countriesRandomize\",\n                      onmouseover: \"tip('Randomize countries Expansion value')\"\n                    }\n                  }),\n                  _c(\"button\", {\n                    staticClass: \"icon-flag\",\n                    attrs: {\n                      id: \"countriesAddR\",\n                      onmouseover: \"tip('Proclaim a new country')\"\n                    }\n                  }),\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"italic\",\n                      attrs: {\n                        onmouseover:\n                          \"tip('Distance to a consider a land as neutral')\"\n                      }\n                    },\n                    [_vm._v(\"Neutral\\n          distance:\")]\n                  ),\n                  _c(\"input\", {\n                    attrs: {\n                      id: \"countriesNeutral\",\n                      oninput:\n                        \"tip('Neutral distance: '+this.value); countriesNeutralNumber.value = this.value\",\n                      type: \"range\",\n                      min: \"1\",\n                      max: \"500\",\n                      value: \"200\"\n                    }\n                  }),\n                  _c(\"input\", {\n                    staticStyle: { width: \"42px\" },\n                    attrs: {\n                      id: \"countriesNeutralNumber\",\n                      oninput:\n                        \"tip('Neutral distance: '+this.value); countriesNeutral.value = this.value\",\n                      type: \"number\",\n                      min: \"1\",\n                      max: \"500\",\n                      value: \"200\"\n                    }\n                  })\n                ]\n              ),\n              _c(\"button\", {\n                staticClass: \"icon-flag\",\n                attrs: {\n                  id: \"countriesAddG\",\n                  onmouseover: \"tip('Proclaim a new country')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-arrows-cw\",\n                attrs: {\n                  id: \"countriesRegenerateNames\",\n                  onmouseover: \"tip('Regenerate countries names')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-download\",\n                attrs: {\n                  id: \"countriesExport\",\n                  onmouseover:\n                    \"tip('Save country-related data as a text file (.csv)')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-upload\",\n                attrs: {\n                  id: \"burgNamesImport\",\n                  onmouseover:\n                    \"tip('Load burg names from a text file. Each name should be on a new line!')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-trash\",\n                attrs: {\n                  id: \"removeCountries\",\n                  onmouseover: \"tip('Remove all countries')\"\n                }\n              })\n            ])\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog stable\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"burgsEditor\" }\n          },\n          [\n            _c(\"div\", { attrs: { id: \"burgsHeader\" } }, [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable alphabetically\",\n                  staticStyle: { \"margin-left\": \"19px\" },\n                  attrs: {\n                    onmouseover:\n                      \"tip('Click to sort alphabetically by burg name')\",\n                    \"data-sortby\": \"burg\"\n                  }\n                },\n                [_vm._v(\"BurgÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable alphabetically\",\n                  staticStyle: { \"margin-left\": \"29px\" },\n                  attrs: {\n                    onmouseover:\n                      \"tip('Click to sort alphabetically by culture name')\",\n                    \"data-sortby\": \"culture\"\n                  }\n                },\n                [_vm._v(\"CultureÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable\",\n                  staticStyle: { \"margin-left\": \"14px\" },\n                  attrs: {\n                    onmouseover: \"tip('Click to sort by country population')\",\n                    \"data-sortby\": \"population\"\n                  }\n                },\n                [_vm._v(\"PopulationÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable alphabetically\",\n                  staticStyle: { \"margin-left\": \"6px\" },\n                  attrs: {\n                    onmouseover: \"tip('Click to sort by country burg type')\",\n                    \"data-sortby\": \"type\"\n                  }\n                },\n                [_vm._v(\"TypeÂ \\n      \")]\n              )\n            ]),\n            _c(\"div\", { attrs: { id: \"burgsBody\" } }),\n            _c(\n              \"div\",\n              { staticClass: \"totalLine\", attrs: { id: \"burgsFooter\" } },\n              [\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { \"margin-left\": \"4px\" },\n                    attrs: { onmouseover: \"tip('Burgs number')\" }\n                  },\n                  [\n                    _vm._v(\"Burgs:Â \"),\n                    _c(\n                      \"span\",\n                      {\n                        attrs: {\n                          onmouseover: \"tip('Burgs number')\",\n                          id: \"burgsFooterBurgs\"\n                        }\n                      },\n                      [_vm._v(\"0\")]\n                    )\n                  ]\n                ),\n                _c(\"div\", { staticStyle: { \"margin-left\": \"10px\" } }, [\n                  _vm._v(\"Average burg: Â \\n        \"),\n                  _c(\"span\", {\n                    staticClass: \"icon-book\",\n                    attrs: { onmouseover: \"tip('Dominant culture')\" }\n                  }),\n                  _c(\n                    \"span\",\n                    {\n                      attrs: {\n                        onmouseover: \"tip('Dominant culture')\",\n                        id: \"burgsFooterCulture\"\n                      }\n                    },\n                    [_vm._v(\"no\")]\n                  ),\n                  _vm._v(\"Â \\n        \"),\n                  _c(\"span\", {\n                    staticClass: \"icon-male\",\n                    attrs: { onmouseover: \"tip('Average burg population')\" }\n                  }),\n                  _c(\"input\", {\n                    attrs: {\n                      onmouseover:\n                        \"tip('Average burg population. Change to recalculate population for all burgs within country')\",\n                      id: \"burgsFooterPopulation\",\n                      type: \"number\",\n                      min: \"1\",\n                      max: \"1000000\",\n                      step: \"100\",\n                      value: \"0\"\n                    }\n                  })\n                ])\n              ]\n            ),\n            _c(\"div\", { attrs: { id: \"burgsBottom\" } }, [\n              _c(\"button\", {\n                staticClass: \"icon-map-signs\",\n                attrs: {\n                  id: \"editScaleBurgs\",\n                  onmouseover:\n                    \"tip('Change demographical and geographical measurements')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-star\",\n                attrs: {\n                  id: \"changeCapital\",\n                  onmouseover:\n                    \"tip('Click on a burg line to make it a new capital')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-arrows-cw\",\n                attrs: {\n                  id: \"regenerateBurgNames\",\n                  onmouseover:\n                    \"tip('Regenerate burg names based on assigned culture')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-fort-awesome\",\n                attrs: { id: \"burgAdd\", onmouseover: \"tip('Add new burg')\" }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-trash\",\n                attrs: {\n                  id: \"removeBurgs\",\n                  onmouseover: \"tip('Remove all burgs')\"\n                }\n              })\n            ])\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog stable\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"culturesEditor\", \"data-type\": \"absolute\" }\n          },\n          [\n            _c(\"div\", { attrs: { id: \"culturesHeader\" } }, [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable alphabetically\",\n                  staticStyle: { \"margin-left\": \"14px\" },\n                  attrs: {\n                    onmouseover: \"tip('Click to sort by culture name')\",\n                    \"data-sortby\": \"culture\"\n                  }\n                },\n                [_vm._v(\"CultureÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable\",\n                  staticStyle: { \"margin-left\": \"16px\" },\n                  attrs: {\n                    onmouseover: \"tip('Click to sort by culture cells count')\",\n                    \"data-sortby\": \"cells\"\n                  }\n                },\n                [_vm._v(\"CellsÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable\",\n                  staticStyle: { \"margin-left\": \"18px\" },\n                  attrs: {\n                    onmouseover: \"tip('Click to sort by culture area')\",\n                    \"data-sortby\": \"area\"\n                  }\n                },\n                [_vm._v(\"AreaÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable\",\n                  staticStyle: { \"margin-left\": \"30px\" },\n                  attrs: {\n                    onmouseover: \"tip('Click to sort by culture population')\",\n                    \"data-sortby\": \"population\"\n                  }\n                },\n                [_vm._v(\"PopulationÂ \\n      \")]\n              ),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"sortable alphabetically\",\n                  staticStyle: { \"margin-left\": \"3px\" },\n                  attrs: {\n                    onmouseover: \"tip('Click to sort by culture namesbase')\",\n                    \"data-sortby\": \"base\"\n                  }\n                },\n                [_vm._v(\"NamesbaseÂ \\n      \")]\n              )\n            ]),\n            _c(\"div\", { attrs: { id: \"culturesBody\" } }),\n            _c(\n              \"div\",\n              { staticClass: \"totalLine\", attrs: { id: \"culturesFooter\" } },\n              [\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { \"margin-left\": \"7px\" },\n                    attrs: {\n                      onmouseover: \"tip('Cultures number (active / total)')\"\n                    }\n                  },\n                  [\n                    _vm._v(\"\\n        Cultures:Â \"),\n                    _c(\"span\", { attrs: { id: \"culturesFooterCultures\" } }, [\n                      _vm._v(\"0 / 7\")\n                    ])\n                  ]\n                ),\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { \"margin-left\": \"7px\" },\n                    attrs: { onmouseover: \"tip('Total Land cells number')\" }\n                  },\n                  [\n                    _vm._v(\"\\n        Cells:Â \"),\n                    _c(\"span\", { attrs: { id: \"culturesFooterCells\" } }, [\n                      _vm._v(\"0\")\n                    ])\n                  ]\n                ),\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { \"margin-left\": \"7px\" },\n                    attrs: { onmouseover: \"tip('Total Land Area')\" }\n                  },\n                  [\n                    _vm._v(\"Area:Â \"),\n                    _c(\"span\", { attrs: { id: \"culturesFooterArea\" } }, [\n                      _vm._v(\"0\")\n                    ])\n                  ]\n                ),\n                _c(\n                  \"div\",\n                  {\n                    staticStyle: { \"margin-left\": \"7px\" },\n                    attrs: { onmouseover: \"tip('Total Population')\" }\n                  },\n                  [\n                    _vm._v(\"Population:Â \"),\n                    _c(\"span\", { attrs: { id: \"culturesFooterPopulation\" } }, [\n                      _vm._v(\"0\")\n                    ])\n                  ]\n                )\n              ]\n            ),\n            _c(\"div\", { attrs: { id: \"culturesBottom\" } }, [\n              _c(\"button\", {\n                staticClass: \"icon-percent\",\n                attrs: {\n                  id: \"culturesPercentage\",\n                  onmouseover: \"tip('Toggle percentage / absolut values views')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-brush\",\n                attrs: {\n                  id: \"culturesManually\",\n                  onmouseover: \"tip('Manually re-assign cultures')\"\n                }\n              }),\n              _c(\n                \"div\",\n                {\n                  staticStyle: { display: \"none\" },\n                  attrs: { id: \"culturesManuallyButtons\" }\n                },\n                [\n                  _c(\"button\", {\n                    staticClass: \"icon-check\",\n                    attrs: {\n                      id: \"culturesManuallyComplete\",\n                      onmouseover: \"tip('Apply assignment')\"\n                    }\n                  }),\n                  _c(\"button\", {\n                    staticClass: \"icon-cancel\",\n                    attrs: {\n                      id: \"culturesManuallyCancel\",\n                      onmouseover: \"tip('Cancel assignment')\"\n                    }\n                  }),\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"italic\",\n                      attrs: { onmouseover: \"tip('Set the brush size')\" }\n                    },\n                    [_vm._v(\"Brush size:\")]\n                  ),\n                  _c(\"input\", {\n                    attrs: {\n                      id: \"culturesManuallyBrush\",\n                      oninput:\n                        \"tip('Brush size: '+this.value); culturesManuallyBrushNumber.value = this.value\",\n                      type: \"range\",\n                      min: \"1\",\n                      max: \"7\",\n                      value: \"3\"\n                    }\n                  }),\n                  _c(\"input\", {\n                    attrs: {\n                      id: \"culturesManuallyBrushNumber\",\n                      oninput:\n                        \"tip('Brush size: '+this.value); culturesManuallyBrush.value = this.value\",\n                      type: \"number\",\n                      min: \"1\",\n                      max: \"7\",\n                      value: \"3\"\n                    }\n                  })\n                ]\n              ),\n              _c(\"button\", {\n                staticClass: \"icon-shuffle\",\n                attrs: {\n                  id: \"culturesRandomize\",\n                  onmouseover: \"tip('Randomly re-distribute cultures')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-arrows-cw\",\n                attrs: {\n                  id: \"culturesRegenerateNames\",\n                  onmouseover:\n                    \"tip('Re-generate all Burg names based on assigned culture')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-list-bullet\",\n                attrs: {\n                  id: \"culturesEditNamesBase\",\n                  onmouseover:\n                    \"tip('Edit a database used for names generation')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-plus\",\n                attrs: {\n                  id: \"culturesAdd\",\n                  onmouseover: \"tip('Add a new culture')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-download\",\n                attrs: {\n                  id: \"culturesExport\",\n                  onmouseover:\n                    \"tip('Save cultures-related data as a text file (.csv)')\"\n                }\n              })\n            ])\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog stable textual\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"namesbaseEditor\" }\n          },\n          [\n            _c(\"div\", { attrs: { id: \"namesbaseBasesTop\" } }, [\n              _c(\"span\", [_vm._v(\"Select base: \")]),\n              _c(\"select\", {\n                attrs: {\n                  id: \"namesbaseSelect\",\n                  onmouseover: \"tip('Select base to edit')\",\n                  value: \"0\"\n                }\n              }),\n              _c(\"span\", [_vm._v(\"Base name: \")]),\n              _c(\"input\", {\n                attrs: {\n                  id: \"namesbaseName\",\n                  onmouseover: \"tip('Type to change a base name')\",\n                  placeholder: \"Base name\",\n                  autocorrect: \"off\",\n                  spellcheck: \"false\"\n                }\n              })\n            ]),\n            _c(\"div\", { attrs: { id: \"namesbaseBody\" } }, [\n              _c(\"span\", [_vm._v(\"Names data:\")]),\n              _c(\"br\"),\n              _c(\"textarea\", {\n                attrs: {\n                  id: \"namesbaseTextarea\",\n                  \"data-base\": \"0\",\n                  cols: \"70\",\n                  rows: \"10\",\n                  onmouseover:\n                    \"tip('Names data: a comma separated list of source names used for names generation')\",\n                  placeholder:\n                    \"Provide a names data: a comma separated list of source names\",\n                  autocorrect: \"off\",\n                  spellcheck: \"false\"\n                }\n              }),\n              _c(\"br\"),\n              _c(\"div\", [\n                _c(\"span\", [_vm._v(\"Method: \")]),\n                _c(\n                  \"select\",\n                  {\n                    attrs: {\n                      onmouseover: \"tip('Select generation method')\",\n                      id: \"namesbaseMethod\"\n                    }\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"let-to-let\" } }, [\n                      _vm._v(\"Markov let-to-let\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"let-to-syl\" } }, [\n                      _vm._v(\"Markov let-to-syl\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"syl-to-syl\" } }, [\n                      _vm._v(\"Markov syl-to-syl\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"selection\" } }, [\n                      _vm._v(\"Random selection\")\n                    ])\n                  ]\n                ),\n                _c(\"span\", [_vm._v(\"   Length: \")]),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"namesbaseMin\",\n                    onmouseover: \"tip('Minimal name length recommendation')\",\n                    type: \"number\",\n                    min: \"2\",\n                    max: \"100\",\n                    value: \"4\"\n                  }\n                }),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"namesbaseMax\",\n                    onmouseover: \"tip('Maximal name length recommendation')\",\n                    type: \"number\",\n                    min: \"2\",\n                    value: \"10\"\n                  }\n                }),\n                _c(\"span\", [_vm._v(\"Dublication: \")]),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"namesbaseDouble\",\n                    onmouseover:\n                      \"tip('Populate with letters that can used twice in a row')\",\n                    autocorrect: \"off\",\n                    spellcheck: \"false\",\n                    value: \"abc\"\n                  }\n                })\n              ]),\n              _c(\"fieldset\", [\n                _c(\"legend\", [_vm._v(\"Generated examples:\")]),\n                _c(\"div\", {\n                  attrs: {\n                    id: \"namesbaseExamples\",\n                    onmouseover:\n                      \"tip('Generated examples. Click to re-gererate')\"\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { attrs: { id: \"namesbaseBottom\" } }, [\n              _c(\"button\", {\n                staticClass: \"icon-cancel\",\n                attrs: {\n                  id: \"namesbaseDefault\",\n                  onmouseover: \"tip('Restore default namesbase')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-plus\",\n                attrs: {\n                  id: \"namesbaseAdd\",\n                  onmouseover: \"tip('Add a new base')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-cw\",\n                attrs: {\n                  id: \"namesbaseUpdateExamples\",\n                  onmouseover:\n                    \"tip('Re-generate examples based on provided data and generation method')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-download\",\n                attrs: {\n                  id: \"namesbaseDownload\",\n                  onmouseover: \"tip('Download namesbase to PC')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-upload\",\n                attrs: {\n                  id: \"namesbaseUpload\",\n                  onmouseover: \"tip('Upload a namesbase from PC')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-mail-alt\",\n                attrs: {\n                  id: \"namesbaseMail\",\n                  onclick:\n                    \"window.open('mailto:maxganiev@yandex.com?Subject=Namesbase%20suggestion', '_blank')\",\n                  onmouseover: \"tip('Send a namesbase suggestion to me')\"\n                }\n              })\n            ])\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog stable textual\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"legendEditor\" }\n          },\n          [\n            _c(\"div\", [\n              _c(\"span\", [_vm._v(\"Select object: \")]),\n              _c(\"select\", {\n                staticStyle: { width: \"120px\" },\n                attrs: {\n                  id: \"legendSelect\",\n                  onmouseover: \"tip('Select object')\"\n                }\n              }),\n              _c(\"span\", [_vm._v(\"Object name: \")]),\n              _c(\"input\", {\n                staticStyle: { width: \"120px\" },\n                attrs: {\n                  id: \"legendName\",\n                  onmouseover: \"tip('Type to change object name')\",\n                  autocorrect: \"off\",\n                  spellcheck: \"false\"\n                }\n              })\n            ]),\n            _c(\"div\", [\n              _c(\"span\", [_vm._v(\"Legend:\")]),\n              _c(\"br\"),\n              _c(\"textarea\", {\n                attrs: {\n                  id: \"legendText\",\n                  cols: \"70\",\n                  rows: \"7\",\n                  onmouseover:\n                    \"tip('Legend is a free text note, enter any object description you like')\",\n                  placeholder:\n                    \"Legend is a free text note, enter any object description you like\"\n                }\n              })\n            ]),\n            _c(\"div\", [\n              _c(\"button\", {\n                staticClass: \"icon-target\",\n                attrs: {\n                  id: \"legendFocus\",\n                  onmouseover: \"tip('Focus map on selected object')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-download\",\n                attrs: {\n                  id: \"legendDownload\",\n                  onmouseover: \"tip('Download legends to PC')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-upload\",\n                attrs: {\n                  id: \"legendUpload\",\n                  onmouseover: \"tip('Upload legends from PC')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-trash\",\n                attrs: {\n                  id: \"legendRemove\",\n                  onmouseover: \"tip('Remove this note')\"\n                }\n              })\n            ])\n          ]\n        ),\n        _c(\n          \"div\",\n          {\n            staticClass: \"dialog stable\",\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"scaleEditor\" }\n          },\n          [\n            _c(\"div\", { attrs: { id: \"scaleBody\" } }, [\n              _c(\"div\", { staticClass: \"scaleHeader\" }, [\n                _c(\"span\", { staticClass: \"icon-map-signs\" }),\n                _c(\"div\", [_vm._v(\"Distances:\")])\n              ]),\n              _c(\"div\", [\n                _c(\"div\", [_vm._v(\"Distance unit:\")]),\n                _c(\n                  \"select\",\n                  {\n                    attrs: {\n                      onmouseover: \"tip('Select Distance unit')\",\n                      id: \"distanceUnit\"\n                    }\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"mi\", selected: \"\" } }, [\n                      _vm._v(\"Mile\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"km\" } }, [\n                      _vm._v(\"Kilometer\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"lg\" } }, [\n                      _vm._v(\"League\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"vr\" } }, [\n                      _vm._v(\"Versta\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"custom_name\" } }, [\n                      _vm._v(\"Custom name\")\n                    ])\n                  ]\n                )\n              ]),\n              _c(\"div\", [\n                _c(\n                  \"div\",\n                  {\n                    attrs: {\n                      onmouseover:\n                        \"tip('Select how many distance unit are in one pixel')\"\n                    }\n                  },\n                  [_vm._v(\"1 map pixel =\\n        \")]\n                ),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"distanceScale\",\n                    onmouseover:\n                      \"tip('Select how many distance unit are in one pixel')\",\n                    type: \"range\",\n                    min: \"0.1\",\n                    max: \"10\",\n                    value: \"3\",\n                    step: \"0.1\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticClass: \"output\",\n                  attrs: {\n                    id: \"scaleOutput\",\n                    onmouseover:\n                      \"tip('Enter how many distance unit are in one pixel')\",\n                    type: \"text\",\n                    value: \"3 mi\"\n                  }\n                })\n              ]),\n              _c(\"div\", [\n                _c(\n                  \"div\",\n                  {\n                    attrs: {\n                      onmouseover:\n                        \"tip('Type area unit name, leave `square` just to add Â² to the distance unit selected above')\"\n                    }\n                  },\n                  [_vm._v(\"\\n          Area unit:\\n        \")]\n                ),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"areaUnit\",\n                    onmouseover:\n                      \"tip('Type area unit name, leave `square` just to add Â² to the distance unit selected above')\",\n                    type: \"text\",\n                    value: \"square\"\n                  }\n                })\n              ]),\n              _c(\"div\", { staticClass: \"scaleHeader\" }, [\n                _c(\"span\", { staticClass: \"icon-signal\" }),\n                _c(\"div\", [_vm._v(\"Altitude:\")])\n              ]),\n              _c(\"div\", [\n                _c(\"div\", [_vm._v(\"Height unit:\")]),\n                _c(\n                  \"select\",\n                  {\n                    attrs: {\n                      onmouseover: \"tip('Select Height unit')\",\n                      id: \"heightUnit\"\n                    }\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"ft\", selected: \"\" } }, [\n                      _vm._v(\"Feet\")\n                    ]),\n                    _c(\"option\", { attrs: { value: \"m\" } }, [_vm._v(\"Meters\")]),\n                    _c(\"option\", { attrs: { value: \"f\" } }, [_vm._v(\"Fathoms\")])\n                  ]\n                )\n              ]),\n              _c(\"div\", [\n                _c(\n                  \"div\",\n                  {\n                    attrs: {\n                      onmouseover:\n                        \"tip('Select height exponent, i.e. a value showing altitude change sharpness')\"\n                    }\n                  },\n                  [_vm._v(\"\\n          Exponent:\\n        \")]\n                ),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"heightExponent\",\n                    onmouseover:\n                      \"tip('Select height exponent, i.e. a value showing altitude change sharpness')\",\n                    onchange: \"heightOutput.value = this.value\",\n                    type: \"range\",\n                    min: \"1.5\",\n                    max: \"2\",\n                    value: \"1.73\",\n                    step: \"0.01\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticClass: \"output\",\n                  attrs: {\n                    id: \"heightOutput\",\n                    onmouseover:\n                      \"tip('Select height exponent, i.e. a value showing altitude change sharpness')\",\n                    type: \"text\",\n                    value: \"1.73\"\n                  }\n                })\n              ]),\n              _c(\"div\", { staticClass: \"scaleHeader\" }, [\n                _c(\"span\", { staticClass: \"icon-minus\" }),\n                _c(\"div\", [_vm._v(\"Scale bar:\")])\n              ]),\n              _c(\"div\", [\n                _c(\n                  \"div\",\n                  { attrs: { onmouseover: \"tip('Change scale bar size')\" } },\n                  [_vm._v(\"Scale bar size:\")]\n                ),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"barSize\",\n                    onmouseover: \"tip('Set scale bar size')\",\n                    type: \"range\",\n                    min: \"0.5\",\n                    max: \"4\",\n                    value: \"2\",\n                    step: \"0.1\"\n                  }\n                }),\n                _c(\"output\", { attrs: { id: \"barSizeOutput\" } }, [_vm._v(\"1\")])\n              ]),\n              _c(\"div\", [\n                _c(\n                  \"div\",\n                  {\n                    attrs: {\n                      onmouseover:\n                        \"tip('Change scale bar label, leave blank to hide label')\"\n                    }\n                  },\n                  [_vm._v(\"Scale bar\\n          label:\\n        \")]\n                ),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"barLabel\",\n                    onmouseover:\n                      \"tip('Set scale bar label, leave blank to hide label')\",\n                    type: \"text\",\n                    placeholder: \"hidden\",\n                    value: \"\"\n                  }\n                })\n              ]),\n              _c(\"div\", [\n                _c(\n                  \"div\",\n                  {\n                    attrs: {\n                      onmouseover: \"tip('Set background for Scale bar')\"\n                    }\n                  },\n                  [_vm._v(\"Background opacity:\")]\n                ),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"barBackOpacity\",\n                    onmouseover: \"tip('Set Scale bar background opacity')\",\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"1\",\n                    value: \"0.2\",\n                    step: \"0.01\"\n                  }\n                }),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"barBackColor\",\n                    onmouseover: \"tip('Set Scale bar background color')\",\n                    type: \"color\",\n                    value: \"#ffffff\"\n                  }\n                })\n              ]),\n              _c(\"div\", { staticClass: \"scaleHeader\" }, [\n                _c(\"span\", { staticClass: \"icon-male\" }),\n                _c(\"div\", [_vm._v(\"Population:\")])\n              ]),\n              _c(\"div\", [\n                _c(\n                  \"div\",\n                  {\n                    attrs: {\n                      onmouseover:\n                        \"tip('Set how many people are in one population point')\"\n                    }\n                  },\n                  [_vm._v(\"1 population\\n          point =\\n        \")]\n                ),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"populationRate\",\n                    onmouseover:\n                      \"tip('Set how many people are in one population point, in Kilos')\",\n                    type: \"range\",\n                    min: \"0.1\",\n                    max: \"10\",\n                    value: \"1\",\n                    step: \"0.1\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticClass: \"output\",\n                  attrs: {\n                    id: \"populationRateOutput\",\n                    onmouseover: \"tip('Enter the population rate, in Kilos')\",\n                    type: \"text\",\n                    value: \"1K\"\n                  }\n                })\n              ]),\n              _c(\"div\", [\n                _c(\"div\", [_vm._v(\"Urbanization rate:\")]),\n                _c(\"input\", {\n                  attrs: {\n                    id: \"urbanization\",\n                    onmouseover:\n                      \"tip('Set the ubranization (burgs population relative to all population) rate')\",\n                    type: \"range\",\n                    min: \"0.01\",\n                    max: \"5\",\n                    value: \"1\",\n                    step: \"0.01\"\n                  }\n                }),\n                _c(\"input\", {\n                  staticClass: \"output\",\n                  attrs: {\n                    id: \"urbanizationOutput\",\n                    onmouseover:\n                      \"tip('Enter the ubranization (burgs population relative to all population) rate')\",\n                    type: \"text\",\n                    value: \"1\"\n                  }\n                })\n              ])\n            ]),\n            _c(\"div\", { attrs: { id: \"scaleBottom\" } }, [\n              _c(\"button\", {\n                staticClass: \"icon-align-center\",\n                attrs: {\n                  id: \"toggleScaleBar\",\n                  onmouseover: \"tip('Click to toggle scale bar')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-eye-off\",\n                attrs: {\n                  onmouseover: \"tip('Click to toggle rulers (measurers)')\",\n                  onclick: '$(\"#ruler\").fadeToggle()'\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-brush\",\n                attrs: {\n                  id: \"addOpisometer\",\n                  onmouseover:\n                    \"tip('Drag to measure curve length with opisometer')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-resize-horizontal\",\n                attrs: {\n                  id: \"addRuler\",\n                  onmouseover: \"tip('Click to place additional linear ruler')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-check-empty\",\n                attrs: {\n                  id: \"addPlanimeter\",\n                  onmouseover:\n                    \"tip('Drag to measure a polygon area with planimeter')\"\n                }\n              }),\n              _c(\"button\", {\n                staticClass: \"icon-trash\",\n                attrs: {\n                  id: \"removeAllRulers\",\n                  onmouseover:\n                    \"tip('Remove all rulers from the map. Click on ruler label to remove ruler separately')\"\n                }\n              })\n            ])\n          ]\n        ),\n        _c(\n          \"div\",\n          { staticStyle: { display: \"none\" }, attrs: { id: \"alert\" } },\n          [_c(\"p\", { attrs: { id: \"alertMessage\" } }, [_vm._v(\"Warning!\")])]\n        )\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}