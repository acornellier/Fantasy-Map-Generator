{"remainingRequest":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/StyleContent.vue?vue&type=template&id=1a0ba5b8&scoped=true&","dependencies":[{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/StyleContent.vue","mtime":1550707432351},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      { staticClass: \"tabcontent\", attrs: { id: \"styleContent\" } },\n      [\n        _c(\"p\", { staticStyle: { display: \"inline-block\" } }, [\n          _vm._v(\"Select element:\")\n        ]),\n        _c(\"select\", { attrs: { id: \"styleElementSelect\" } }, [\n          _c(\"option\", { attrs: { value: \"grid\" } }, [_vm._v(\"Grid\")]),\n          _c(\"option\", { attrs: { value: \"neutralBorders\" } }, [\n            _vm._v(\"Borders (neutral)\")\n          ]),\n          _c(\"option\", { attrs: { value: \"stateBorders\" } }, [\n            _vm._v(\"Borders (state)\")\n          ]),\n          _c(\"option\", { attrs: { value: \"coastline\" } }, [\n            _vm._v(\"Coastline\")\n          ]),\n          _c(\"option\", { attrs: { value: \"regions\" } }, [_vm._v(\"Countries\")]),\n          _c(\"option\", { attrs: { value: \"cults\" } }, [_vm._v(\"Cultures\")]),\n          _c(\"option\", { attrs: { value: \"terrs\" } }, [_vm._v(\"Heightmap\")]),\n          _c(\"option\", { attrs: { value: \"icons\" } }, [_vm._v(\"Icons\")]),\n          _c(\"option\", { attrs: { value: \"labels\" } }, [_vm._v(\"Labels\")]),\n          _c(\"option\", { attrs: { value: \"lakes\" } }, [_vm._v(\"Lakes\")]),\n          _c(\"option\", { attrs: { value: \"landmass\" } }, [_vm._v(\"Landmass\")]),\n          _c(\"option\", { attrs: { value: \"markers\" } }, [_vm._v(\"Markers\")]),\n          _c(\"option\", { attrs: { value: \"ocean\", selected: \"\" } }, [\n            _vm._v(\"Ocean\")\n          ]),\n          _c(\"option\", { attrs: { value: \"overlay\" } }, [_vm._v(\"Overlay\")]),\n          _c(\"option\", { attrs: { value: \"terrain\" } }, [_vm._v(\"Relief\")]),\n          _c(\"option\", { attrs: { value: \"rivers\" } }, [_vm._v(\"Rivers\")]),\n          _c(\"option\", { attrs: { value: \"roads\" } }, [_vm._v(\"Roads\")]),\n          _c(\"option\", { attrs: { value: \"ruler\" } }, [_vm._v(\"Rulers\")]),\n          _c(\"option\", { attrs: { value: \"trails\" } }, [_vm._v(\"Trails\")]),\n          _c(\"option\", { attrs: { value: \"searoutes\" } }, [\n            _vm._v(\"Searoutes\")\n          ]),\n          _c(\"option\", { attrs: { value: \"scaleBar\" } }, [_vm._v(\"Scale bar\")])\n        ]),\n        _c(\"i\", {\n          staticClass: \"icon-ccw\",\n          attrs: {\n            id: \"restoreStyle\",\n            onmouseover: \"tip('Restore default style')\"\n          }\n        }),\n        _c(\"div\", { attrs: { id: \"styleInputs\" } }, [\n          _c(\"div\", { attrs: { id: \"styleOverlay\" } }, [\n            _c(\"br\"),\n            _c(\"span\", [\n              _vm._v(\"Ensure Overlay layer is active (see Layout tab)\")\n            ]),\n            _c(\"br\"),\n            _c(\"br\"),\n            _vm._v(\"Overlay type: \"),\n            _c(\n              \"select\",\n              { staticClass: \"pureInput\", attrs: { id: \"styleOverlayType\" } },\n              [\n                _c(\"option\", { attrs: { value: \"pointyHex\", selected: \"\" } }, [\n                  _vm._v(\"Hex grid (pointy)\")\n                ]),\n                _c(\"option\", { attrs: { value: \"flatHex\" } }, [\n                  _vm._v(\"Hex grid (flat)\")\n                ]),\n                _c(\"option\", { attrs: { value: \"square\" } }, [\n                  _vm._v(\"Square grid\")\n                ]),\n                _c(\"option\", { attrs: { value: \"windrose\" } }, [\n                  _vm._v(\"Wind rose\")\n                ])\n              ]\n            ),\n            _c(\"br\"),\n            _c(\"br\"),\n            _vm._v(\"Size: \"),\n            _c(\"input\", {\n              attrs: {\n                id: \"styleOverlaySize\",\n                type: \"range\",\n                min: \"2\",\n                max: \"50\",\n                step: \"0.1\",\n                value: \"10\"\n              }\n            }),\n            _c(\n              \"output\",\n              {\n                attrs: {\n                  id: \"styleOverlaySizeOutput\",\n                  onmouseover: \"tip('Overlay size')\"\n                }\n              },\n              [_vm._v(\"10\")]\n            ),\n            _c(\n              \"output\",\n              {\n                attrs: {\n                  id: \"styleOverlaySizeFriendly\",\n                  onmouseover:\n                    \"tip('Size between two adjacent cells in map scale')\"\n                }\n              },\n              [_vm._v(\"(52 mi)\\n      \")]\n            )\n          ]),\n          _c(\"div\", { attrs: { id: \"styleOcean\" } }, [\n            _c(\"br\"),\n            _vm._v(\"Elements:\\n      \"),\n            _c(\"input\", {\n              staticClass: \"checkbox\",\n              attrs: { id: \"styleOceanPattern\", type: \"checkbox\", checked: \"\" }\n            }),\n            _c(\n              \"label\",\n              {\n                staticClass: \"checkbox-label\",\n                attrs: {\n                  for: \"styleOceanPattern\",\n                  onmouseover: \"tip('Toggle ocean pattern')\"\n                }\n              },\n              [_vm._v(\"Pattern\")]\n            ),\n            _c(\"input\", {\n              staticClass: \"checkbox\",\n              attrs: { id: \"styleOceanLayers\", type: \"checkbox\", checked: \"\" }\n            }),\n            _c(\n              \"label\",\n              {\n                staticClass: \"checkbox-label\",\n                attrs: {\n                  for: \"styleOceanLayers\",\n                  onmouseover: \"tip('Toggle ocean layers')\"\n                }\n              },\n              [_vm._v(\"Layers\")]\n            ),\n            _c(\"br\"),\n            _vm._v(\"\\n      Background: \"),\n            _c(\"input\", {\n              attrs: { id: \"styleOceanBack\", type: \"color\", value: \"#000000\" }\n            }),\n            _c(\"output\", { attrs: { id: \"styleOceanBackOutput\" } }, [\n              _vm._v(\"#000000\")\n            ]),\n            _c(\"br\"),\n            _vm._v(\"\\n      Foreground: \"),\n            _c(\"input\", {\n              attrs: { id: \"styleOceanFore\", type: \"color\", value: \"#53679f\" }\n            }),\n            _c(\"output\", { attrs: { id: \"styleOceanForeOutput\" } }, [\n              _vm._v(\"#53679f\")\n            ])\n          ]),\n          _c(\"div\", { attrs: { id: \"styleFill\" } }, [\n            _vm._v(\"\\n      Fill: \"),\n            _c(\"input\", {\n              attrs: { id: \"styleFillInput\", type: \"color\", value: \"#5E4FA2\" }\n            }),\n            _c(\"output\", { attrs: { id: \"styleFillOutput\" } }, [\n              _vm._v(\"#5E4FA2\")\n            ])\n          ]),\n          _c(\"div\", { attrs: { id: \"styleStroke\" } }, [\n            _vm._v(\"\\n      Stroke: \"),\n            _c(\"input\", {\n              attrs: { id: \"styleStrokeInput\", type: \"color\", value: \"#5E4FA2\" }\n            }),\n            _c(\"output\", { attrs: { id: \"styleStrokeOutput\" } }, [\n              _vm._v(\"#5E4FA2\")\n            ])\n          ]),\n          _c(\"div\", { attrs: { id: \"styleStrokeWidth\" } }, [\n            _c(\"br\"),\n            _vm._v(\"Stroke width: \"),\n            _c(\"input\", {\n              attrs: {\n                id: \"styleStrokeWidthInput\",\n                type: \"range\",\n                min: \"0\",\n                max: \"3\",\n                step: \"0.01\",\n                value: \"1\"\n              }\n            }),\n            _c(\"output\", { attrs: { id: \"styleStrokeWidthOutput\" } }, [\n              _vm._v(\"1\")\n            ])\n          ]),\n          _c(\"div\", { attrs: { id: \"styleStrokeDasharray\" } }, [\n            _c(\"br\"),\n            _vm._v(\"Stroke dasharray: \"),\n            _c(\"input\", {\n              staticClass: \"pureInput\",\n              attrs: { id: \"styleStrokeDasharrayInput\", value: \"1 2\" }\n            })\n          ]),\n          _c(\"div\", { attrs: { id: \"styleStrokeLinecap\" } }, [\n            _c(\"br\"),\n            _vm._v(\"Stroke linecap: \"),\n            _c(\n              \"select\",\n              {\n                staticClass: \"pureInput\",\n                attrs: { id: \"styleStrokeLinecapInput\" }\n              },\n              [\n                _c(\"option\", { attrs: { value: \"inherit\", selected: \"\" } }, [\n                  _vm._v(\"Inherit\")\n                ]),\n                _c(\"option\", { attrs: { value: \"butt\" } }, [_vm._v(\"Butt\")]),\n                _c(\"option\", { attrs: { value: \"round\" } }, [_vm._v(\"Round\")]),\n                _c(\"option\", { attrs: { value: \"square\" } }, [_vm._v(\"Square\")])\n              ]\n            )\n          ]),\n          _c(\"div\", { attrs: { id: \"styleFontSize\" } }, [\n            _c(\"br\"),\n            _vm._v(\"Font size:\\n      \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"whiteButton\",\n                attrs: {\n                  onmouseover: \"tip('Multiply all Fonts size by 1.1')\",\n                  id: \"styleFontPlus\"\n                }\n              },\n              [_vm._v(\"+\\n      \")]\n            ),\n            _c(\n              \"button\",\n              {\n                staticClass: \"whiteButton\",\n                attrs: {\n                  onmouseover: \"tip('Multiply all Fonts size by 0.9')\",\n                  id: \"styleFontMinus\"\n                }\n              },\n              [_vm._v(\"-\\n      \")]\n            )\n          ]),\n          _c(\"div\", { attrs: { id: \"styleSize\" } }, [\n            _c(\"br\"),\n            _vm._v(\"Radius:\\n      \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"whiteButton\",\n                attrs: {\n                  onmouseover: \"tip('Multiply Radius by 1.1')\",\n                  id: \"styleFillPlus\"\n                }\n              },\n              [_vm._v(\"+\\n      \")]\n            ),\n            _c(\n              \"button\",\n              {\n                staticClass: \"whiteButton\",\n                attrs: {\n                  onmouseover: \"tip('Multiply Radius by 0.9')\",\n                  id: \"styleFillMinus\"\n                }\n              },\n              [_vm._v(\"-\\n      \")]\n            ),\n            _c(\"span\", [_vm._v(\" Stroke: \")]),\n            _c(\n              \"button\",\n              {\n                staticClass: \"whiteButton\",\n                attrs: {\n                  onmouseover: \"tip('Multiply Stroke-width by 1.1')\",\n                  id: \"styleStrokePlus\"\n                }\n              },\n              [_vm._v(\"+\\n      \")]\n            ),\n            _c(\n              \"button\",\n              {\n                staticClass: \"whiteButton\",\n                attrs: {\n                  onmouseover: \"tip('Multiply Stroke-width by 0.9')\",\n                  id: \"styleStrokeMinus\"\n                }\n              },\n              [_vm._v(\"-\\n      \")]\n            )\n          ]),\n          _c(\"div\", { attrs: { id: \"styleOpacity\" } }, [\n            _c(\"br\"),\n            _vm._v(\"Opacity: \"),\n            _c(\"input\", {\n              attrs: {\n                id: \"styleOpacityInput\",\n                type: \"range\",\n                min: \"0\",\n                max: \"1\",\n                step: \"0.01\",\n                value: \"1\"\n              }\n            }),\n            _c(\"output\", { attrs: { id: \"styleOpacityOutput\" } }, [_vm._v(\"1\")])\n          ]),\n          _c(\"div\", { attrs: { id: \"styleFilter\" } }, [\n            _c(\"br\"),\n            _vm._v(\"Filter: \"),\n            _c(\n              \"select\",\n              { staticClass: \"pureInput\", attrs: { id: \"styleFilterInput\" } },\n              [\n                _c(\"option\", { attrs: { value: \"\", selected: \"\" } }, [\n                  _vm._v(\"None\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#blurFilter)\" } }, [\n                  _vm._v(\"Blur 0.2\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#blur1)\" } }, [\n                  _vm._v(\"Blur 1\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#blur5)\" } }, [\n                  _vm._v(\"Blur 5\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#blur10)\" } }, [\n                  _vm._v(\"Blur 10\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#splotch)\" } }, [\n                  _vm._v(\"Splotch\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#bluredSplotch)\" } }, [\n                  _vm._v(\"Blured Splotch\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#dropShadow01)\" } }, [\n                  _vm._v(\"Shadow 0.1\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#dropShadow05)\" } }, [\n                  _vm._v(\"Shadow 0.5\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#dropShadow)\" } }, [\n                  _vm._v(\"Shadow 2\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#outline)\" } }, [\n                  _vm._v(\"Outline\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#pencil)\" } }, [\n                  _vm._v(\"Pencil\")\n                ]),\n                _c(\"option\", { attrs: { value: \"url(#turbulence)\" } }, [\n                  _vm._v(\"Turbulence\")\n                ])\n              ]\n            )\n          ]),\n          _c(\"div\", { attrs: { id: \"styleScheme\" } }, [\n            _c(\"br\"),\n            _vm._v(\"Color scheme: \"),\n            _c(\n              \"select\",\n              { staticClass: \"pureInput\", attrs: { id: \"styleSchemeInput\" } },\n              [\n                _c(\"option\", { attrs: { value: \"bright\", selected: \"\" } }, [\n                  _vm._v(\"Bright\")\n                ]),\n                _c(\"option\", { attrs: { value: \"light\" } }, [_vm._v(\"Light\")]),\n                _c(\"option\", { attrs: { value: \"green\" } }, [_vm._v(\"Green\")]),\n                _c(\"option\", { attrs: { value: \"monochrome\" } }, [\n                  _vm._v(\"Monochrome\")\n                ])\n              ]\n            )\n          ]),\n          _c(\"div\", { attrs: { id: \"styleLabelGroups\" } }, [\n            _c(\"fieldset\", [\n              _c(\"legend\", [_vm._v(\"Label groups:\")]),\n              _c(\"input\", {\n                staticClass: \"checkbox\",\n                attrs: { id: \"hideLabels\", type: \"checkbox\", checked: \"\" }\n              }),\n              _c(\n                \"label\",\n                {\n                  staticClass: \"checkbox-label\",\n                  attrs: {\n                    for: \"hideLabels\",\n                    onmouseover:\n                      \"tip('Allow system to hide labels if their size in too small on that scale)')\"\n                  }\n                },\n                [_vm._v(\"Toggle visibility automatically\")]\n              ),\n              _c(\"div\", { attrs: { id: \"styleLabelGroupItems\" } })\n            ])\n          ])\n        ]),\n        _c(\"div\", { attrs: { id: \"mapFilters\" } }, [\n          _c(\"p\", [_vm._v(\"Toggle filters:\")]),\n          _c(\"button\", { staticClass: \"radio\", attrs: { id: \"grayscale\" } }, [\n            _vm._v(\"Grayscale\")\n          ]),\n          _c(\"button\", { staticClass: \"radio\", attrs: { id: \"sepia\" } }, [\n            _vm._v(\"Sepia\")\n          ]),\n          _c(\"button\", { staticClass: \"radio\", attrs: { id: \"dingy\" } }, [\n            _vm._v(\"Dingy\")\n          ]),\n          _c(\"button\", { staticClass: \"radio\", attrs: { id: \"tint\" } }, [\n            _vm._v(\"Tint\")\n          ])\n        ])\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}