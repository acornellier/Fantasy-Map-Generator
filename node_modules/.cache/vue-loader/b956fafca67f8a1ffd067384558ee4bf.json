{"remainingRequest":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/dialogs/NamesBaseEditor.vue?vue&type=template&id=11a67fbc&","dependencies":[{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/dialogs/NamesBaseEditor.vue","mtime":1550714101559},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      {\n        staticClass: \"dialog stable textual\",\n        staticStyle: { display: \"none\" },\n        attrs: { id: \"namesbaseEditor\" }\n      },\n      [\n        _c(\"div\", { attrs: { id: \"namesbaseBasesTop\" } }, [\n          _c(\"span\", [_vm._v(\"Select base: \")]),\n          _c(\"select\", {\n            attrs: {\n              id: \"namesbaseSelect\",\n              onmouseover: \"tip('Select base to edit')\",\n              value: \"0\"\n            }\n          }),\n          _c(\"span\", [_vm._v(\"Base name: \")]),\n          _c(\"input\", {\n            attrs: {\n              id: \"namesbaseName\",\n              onmouseover: \"tip('Type to change a base name')\",\n              placeholder: \"Base name\",\n              autocorrect: \"off\",\n              spellcheck: \"false\"\n            }\n          })\n        ]),\n        _c(\"div\", { attrs: { id: \"namesbaseBody\" } }, [\n          _c(\"span\", [_vm._v(\"Names data:\")]),\n          _c(\"br\"),\n          _c(\"textarea\", {\n            attrs: {\n              id: \"namesbaseTextarea\",\n              \"data-base\": \"0\",\n              cols: \"70\",\n              rows: \"10\",\n              onmouseover:\n                \"tip('Names data: a comma separated list of source names used for names generation')\",\n              placeholder:\n                \"Provide a names data: a comma separated list of source names\",\n              autocorrect: \"off\",\n              spellcheck: \"false\"\n            }\n          }),\n          _c(\"br\"),\n          _c(\"div\", [\n            _c(\"span\", [_vm._v(\"Method: \")]),\n            _c(\n              \"select\",\n              {\n                attrs: {\n                  onmouseover: \"tip('Select generation method')\",\n                  id: \"namesbaseMethod\"\n                }\n              },\n              [\n                _c(\"option\", { attrs: { value: \"let-to-let\" } }, [\n                  _vm._v(\"Markov let-to-let\")\n                ]),\n                _c(\"option\", { attrs: { value: \"let-to-syl\" } }, [\n                  _vm._v(\"Markov let-to-syl\")\n                ]),\n                _c(\"option\", { attrs: { value: \"syl-to-syl\" } }, [\n                  _vm._v(\"Markov syl-to-syl\")\n                ]),\n                _c(\"option\", { attrs: { value: \"selection\" } }, [\n                  _vm._v(\"Random selection\")\n                ])\n              ]\n            ),\n            _c(\"span\", [_vm._v(\"   Length: \")]),\n            _c(\"input\", {\n              attrs: {\n                id: \"namesbaseMin\",\n                onmouseover: \"tip('Minimal name length recommendation')\",\n                type: \"number\",\n                min: \"2\",\n                max: \"100\",\n                value: \"4\"\n              }\n            }),\n            _c(\"input\", {\n              attrs: {\n                id: \"namesbaseMax\",\n                onmouseover: \"tip('Maximal name length recommendation')\",\n                type: \"number\",\n                min: \"2\",\n                value: \"10\"\n              }\n            }),\n            _c(\"span\", [_vm._v(\"Dublication: \")]),\n            _c(\"input\", {\n              attrs: {\n                id: \"namesbaseDouble\",\n                onmouseover:\n                  \"tip('Populate with letters that can used twice in a row')\",\n                autocorrect: \"off\",\n                spellcheck: \"false\",\n                value: \"abc\"\n              }\n            })\n          ]),\n          _c(\"fieldset\", [\n            _c(\"legend\", [_vm._v(\"Generated examples:\")]),\n            _c(\"div\", {\n              attrs: {\n                id: \"namesbaseExamples\",\n                onmouseover: \"tip('Generated examples. Click to re-gererate')\"\n              }\n            })\n          ])\n        ]),\n        _c(\"div\", { attrs: { id: \"namesbaseBottom\" } }, [\n          _c(\"button\", {\n            staticClass: \"icon-cancel\",\n            attrs: {\n              id: \"namesbaseDefault\",\n              onmouseover: \"tip('Restore default namesbase')\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-plus\",\n            attrs: { id: \"namesbaseAdd\", onmouseover: \"tip('Add a new base')\" }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-cw\",\n            attrs: {\n              id: \"namesbaseUpdateExamples\",\n              onmouseover:\n                \"tip('Re-generate examples based on provided data and generation method')\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-download\",\n            attrs: {\n              id: \"namesbaseDownload\",\n              onmouseover: \"tip('Download namesbase to PC')\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-upload\",\n            attrs: {\n              id: \"namesbaseUpload\",\n              onmouseover: \"tip('Upload a namesbase from PC')\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-mail-alt\",\n            attrs: {\n              id: \"namesbaseMail\",\n              onclick:\n                \"window.open('mailto:maxganiev@yandex.com?Subject=Namesbase%20suggestion', '_blank')\",\n              onmouseover: \"tip('Send a namesbase suggestion to me')\"\n            }\n          })\n        ])\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}