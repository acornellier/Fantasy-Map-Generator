{"remainingRequest":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/dialogs/BrushesPanel.vue?vue&type=template&id=02a4e5e0&","dependencies":[{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/dialogs/BrushesPanel.vue","mtime":1550714101557},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      {\n        staticClass: \"dialog stable\",\n        staticStyle: { display: \"none\" },\n        attrs: { id: \"brushesPanel\" }\n      },\n      [\n        _c(\"div\", { attrs: { id: \"brushesButtons\" } }, [\n          _c(\n            \"button\",\n            {\n              staticClass: \"noicon\",\n              attrs: {\n                id: \"brushElevate\",\n                onmouseover:\n                  \"tip('Click and drag the map to increase cells elevation')\"\n              }\n            },\n            [_vm._v(\"↥\\n      \")]\n          ),\n          _c(\n            \"button\",\n            {\n              staticClass: \"noicon\",\n              attrs: {\n                id: \"brushDepress\",\n                onmouseover:\n                  \"tip('Click and drag the map to decrease cells elevation')\"\n              }\n            },\n            [_vm._v(\"↧\\n      \")]\n          ),\n          _c(\n            \"button\",\n            {\n              staticClass: \"noicon\",\n              attrs: {\n                id: \"brushAlign\",\n                onmouseover:\n                  \"tip('Click and drag the map to align cells elevation')\"\n              }\n            },\n            [_vm._v(\"=\\n      \")]\n          ),\n          _c(\n            \"button\",\n            {\n              staticClass: \"noicon\",\n              attrs: {\n                id: \"brushSmooth\",\n                onmouseover:\n                  \"tip('Click and drag the map to smooth cells elevation')\"\n              }\n            },\n            [_vm._v(\"~\\n      \")]\n          ),\n          _c(\n            \"button\",\n            {\n              staticClass: \"feature noicon\",\n              attrs: {\n                id: \"brushHill\",\n                onmouseover: \"tip('Click on the map to place a Hill')\"\n              }\n            },\n            [_vm._v(\"H\\n      \")]\n          ),\n          _c(\n            \"button\",\n            {\n              staticClass: \"feature noicon\",\n              attrs: {\n                id: \"brushPit\",\n                onmouseover: \"tip('Click on the map to place a Pit')\"\n              }\n            },\n            [_vm._v(\"P\\n      \")]\n          ),\n          _c(\n            \"button\",\n            {\n              staticClass: \"feature noicon\",\n              attrs: {\n                id: \"brushRange\",\n                onmouseover: \"tip('Select two points to place a Range')\"\n              }\n            },\n            [_vm._v(\"R\\n      \")]\n          ),\n          _c(\n            \"button\",\n            {\n              staticClass: \"feature noicon\",\n              attrs: {\n                id: \"brushTrough\",\n                onmouseover: \"tip('Select two points to place a Trought')\"\n              }\n            },\n            [_vm._v(\"T\\n      \")]\n          )\n        ]),\n        _c(\"div\", { staticStyle: { display: \"table\" } }, [\n          _c(\n            \"label\",\n            {\n              staticClass: \"disabled italic\",\n              attrs: {\n                id: \"brushRadiusLabel\",\n                onmouseover:\n                  \"tip('Set the brush effective radius. Works only with 4 brushes above')\"\n              }\n            },\n            [_vm._v(\"R:\")]\n          ),\n          _c(\"input\", {\n            staticClass: \"disabled\",\n            attrs: {\n              id: \"brushRadius\",\n              oninput: \"tip('Brush radius: '+this.value)\",\n              type: \"range\",\n              min: \"1\",\n              max: \"10\",\n              value: \"3\",\n              disabled: \"\"\n            }\n          }),\n          _c(\n            \"label\",\n            {\n              staticClass: \"italic\",\n              attrs: {\n                onmouseover: \"tip('Set the brush power in points of height')\"\n              }\n            },\n            [_vm._v(\"H:\")]\n          ),\n          _c(\"input\", {\n            attrs: {\n              id: \"brushPower\",\n              oninput: \"tip('Brush power: '+this.value)\",\n              type: \"range\",\n              min: \"1\",\n              max: \"30\",\n              value: \"5\"\n            }\n          })\n        ]),\n        _c(\"div\", { attrs: { id: \"modifyButtons\" } }, [\n          _c(\"button\", {\n            staticClass: \"icon-ccw\",\n            attrs: {\n              id: \"undo\",\n              onmouseover: \"tip('Undo the latest action (Ctrl + Z)')\",\n              disabled: \"\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-cw\",\n            attrs: {\n              id: \"redo\",\n              onmouseover: \"tip('Redo the action (Ctrl + Y)')\",\n              disabled: \"\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-exchange\",\n            attrs: {\n              id: \"rescaleButton\",\n              onmouseover: \"tip('Show rescaler slider')\"\n            }\n          }),\n          _c(\"input\", {\n            staticClass: \"hidden\",\n            attrs: {\n              id: \"rescaler\",\n              onmouseover: \"tip('Slide to change map height')\",\n              type: \"range\",\n              min: \"1\",\n              max: \"10\",\n              step: \"0.1\",\n              value: \"5\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-if\",\n            attrs: {\n              id: \"rescaleCondButton\",\n              onmouseover: \"tip('Conditional rescaler')\"\n            }\n          }),\n          _c(\"label\", { staticClass: \"condition hidden\" }, [_vm._v(\"h ≥\")]),\n          _c(\"input\", {\n            staticClass: \"condition hidden\",\n            attrs: {\n              id: \"rescaleLower\",\n              onmouseover: \"tip('Set lower threshold')\",\n              value: \"20\",\n              type: \"number\",\n              min: \"0\",\n              max: \"100\"\n            }\n          }),\n          _c(\"label\", { staticClass: \"condition hidden\" }, [_vm._v(\"≤\")]),\n          _c(\"input\", {\n            staticClass: \"condition hidden\",\n            attrs: {\n              id: \"rescaleHigher\",\n              onmouseover: \"tip('Set higher threshold')\",\n              value: \"100\",\n              type: \"number\",\n              min: \"1\",\n              max: \"100\"\n            }\n          }),\n          _c(\"label\", { staticClass: \"condition hidden\" }, [_vm._v(\"⇒\")]),\n          _c(\n            \"select\",\n            { staticClass: \"condition hidden\", attrs: { id: \"conditionSign\" } },\n            [\n              _c(\"option\", { attrs: { value: \"×\", selected: \"\" } }, [\n                _vm._v(\"×\")\n              ]),\n              _c(\"option\", { attrs: { value: \"÷\" } }, [_vm._v(\"÷\")]),\n              _c(\"option\", { attrs: { value: \"+\" } }, [_vm._v(\"+\")]),\n              _c(\"option\", { attrs: { value: \"-\" } }, [_vm._v(\"-\")]),\n              _c(\"option\", { attrs: { value: \"^\" } }, [_vm._v(\"^\")])\n            ]\n          ),\n          _c(\"input\", {\n            staticClass: \"condition hidden\",\n            attrs: {\n              id: \"rescaleModifier\",\n              onmouseover: \"tip('Set modifier value')\",\n              type: \"number\",\n              value: \"0.9\",\n              min: \"0\",\n              max: \"1.5\",\n              step: \"0.01\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-play-circled2 condition hidden\",\n            attrs: { id: \"rescaleExecute\", onmouseover: \"tip('Run condition')\" }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-smooth\",\n            attrs: {\n              id: \"smoothHeights\",\n              onmouseover: \"tip('Smooth all heights')\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-disrupt\",\n            attrs: {\n              id: \"disruptHeights\",\n              onmouseover: \"tip('Disrupt (randomize) heights')\"\n            }\n          }),\n          _c(\"button\", {\n            staticClass: \"icon-eraser\",\n            attrs: { id: \"brushClear\", onmouseover: \"tip('Clear all height')\" }\n          })\n        ])\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}