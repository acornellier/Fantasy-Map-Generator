{"remainingRequest":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/OptionsContent.vue?vue&type=template&id=2e2350ab&scoped=true&","dependencies":[{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/src/components/OptionsContent.vue","mtime":1550707626425},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/cache-loader/dist/cjs.js","mtime":1550636236327},{"path":"/Users/acornellier/git/Fantasy-Map-Generator/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      { staticClass: \"tabcontent\", attrs: { id: \"optionsContent\" } },\n      [\n        _c(\n          \"p\",\n          {\n            attrs: {\n              onmouseover:\n                \"tip('Map generation setting. Generate a new map to apply the settings')\"\n            }\n          },\n          [_vm._v(\"\\n      Generation options (new map to apply):\")]\n        ),\n        _c(\"table\", [\n          _c(\"tr\", [\n            _c(\"td\"),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Map canvas height and width in pixels. Highly affects performance')\"\n                }\n              },\n              [_vm._v(\"\\n          Map size\\n        \")]\n            ),\n            _c(\"td\", { staticStyle: { width: \"130px\" } }, [\n              _c(\"span\", { attrs: { onmouseover: \"tip('Map width')\" } }, [\n                _vm._v(\"w:\")\n              ]),\n              _c(\"input\", {\n                staticClass: \"pairedNumber\",\n                attrs: {\n                  id: \"mapWidthInput\",\n                  type: \"number\",\n                  min: \"240\",\n                  value: \"960\"\n                }\n              }),\n              _c(\"span\", { attrs: { onmouseover: \"tip('Map height')\" } }, [\n                _vm._v(\"h:\")\n              ]),\n              _c(\"input\", {\n                staticClass: \"pairedNumber\",\n                attrs: {\n                  id: \"mapHeightInput\",\n                  type: \"number\",\n                  min: \"135\",\n                  value: \"540\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"i\", {\n                staticClass: \"icon-resize-full-alt\",\n                attrs: {\n                  onmouseover: \"tip('Fit map to screen size')\",\n                  id: \"updateFullscreen\"\n                }\n              })\n            ])\n          ]),\n          _c(\"tr\", [\n            _c(\"td\"),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Cells density controls underlying graph size and hightly affects performance')\"\n                }\n              },\n              [_vm._v(\"\\n          Map cells density\\n        \")]\n            ),\n            _c(\"td\", [\n              _c(\"input\", {\n                attrs: {\n                  id: \"sizeInput\",\n                  type: \"range\",\n                  min: \"1\",\n                  max: \"3\",\n                  value: \"1\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"output\", { attrs: { id: \"sizeOutput\" } }, [_vm._v(\"1\")])\n            ])\n          ]),\n          _c(\"tr\", [\n            _c(\"td\", [\n              _c(\"i\", {\n                staticClass: \"icon-lock-open\",\n                attrs: {\n                  onmouseover:\n                    \"tip('Lock to restrict option randomization on new map generation')\",\n                  \"data-locked\": \"0\",\n                  id: \"lockTemplateInput\"\n                }\n              })\n            ]),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Select template to be used for a Heightmap generation')\"\n                }\n              },\n              [_vm._v(\"\\n          Heightmap template\\n        \")]\n            ),\n            _c(\"td\", [\n              _c(\"select\", { attrs: { id: \"templateInput\" } }, [\n                _c(\"option\", { attrs: { value: \"Volcano\" } }, [\n                  _vm._v(\"Volcano\")\n                ]),\n                _c(\"option\", { attrs: { value: \"High Island\" } }, [\n                  _vm._v(\"High Island\")\n                ]),\n                _c(\"option\", { attrs: { value: \"Low Island\" } }, [\n                  _vm._v(\"Low Island\")\n                ]),\n                _c(\"option\", { attrs: { value: \"Continents\" } }, [\n                  _vm._v(\"Continents\")\n                ]),\n                _c(\"option\", { attrs: { value: \"Archipelago\" } }, [\n                  _vm._v(\"Archipelago\")\n                ]),\n                _c(\"option\", { attrs: { value: \"Atoll\" } }, [_vm._v(\"Atoll\")]),\n                _c(\"option\", { attrs: { value: \"Mainland\" } }, [\n                  _vm._v(\"Mainland\")\n                ]),\n                _c(\"option\", { attrs: { value: \"Peninsulas\" } }, [\n                  _vm._v(\"Peninsulas\")\n                ])\n              ])\n            ]),\n            _c(\"td\")\n          ]),\n          _c(\"tr\", [\n            _c(\"td\", [\n              _c(\"i\", {\n                staticClass: \"icon-lock-open\",\n                attrs: {\n                  onmouseover:\n                    \"tip('Lock to restrict option randomization on new map generation')\",\n                  \"data-locked\": \"0\",\n                  id: \"lockManorsInput\"\n                }\n              })\n            ]),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Define how many Settlements should be placed')\"\n                }\n              },\n              [_vm._v(\"Burgs count\")]\n            ),\n            _c(\"td\", [\n              _c(\"input\", {\n                attrs: {\n                  id: \"manorsInput\",\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"999\",\n                  value: \"500\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"output\", { attrs: { id: \"manorsOutput\" } }, [_vm._v(\"500\")])\n            ])\n          ]),\n          _c(\"tr\", [\n            _c(\"td\", [\n              _c(\"i\", {\n                staticClass: \"icon-lock-open\",\n                attrs: {\n                  onmouseover:\n                    \"tip('Lock to restrict option randomization on new map generation')\",\n                  \"data-locked\": \"0\",\n                  id: \"lockRegionsInput\"\n                }\n              })\n            ]),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Define how many Countries should be created')\"\n                }\n              },\n              [_vm._v(\"States count\")]\n            ),\n            _c(\"td\", [\n              _c(\"input\", {\n                attrs: {\n                  id: \"regionsInput\",\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  value: \"13\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"output\", { attrs: { id: \"regionsOutput\" } }, [_vm._v(\"13\")])\n            ])\n          ]),\n          _c(\"tr\", [\n            _c(\"td\", [\n              _c(\"i\", {\n                staticClass: \"icon-lock-open\",\n                attrs: {\n                  onmouseover:\n                    \"tip('Lock to restrict option randomization on new map generation')\",\n                  \"data-locked\": \"0\",\n                  id: \"lockPowerInput\"\n                }\n              })\n            ]),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Define Countries size variety. Set to 0 to have all countries sized the same')\"\n                }\n              },\n              [_vm._v(\"\\n          States disbalance\\n        \")]\n            ),\n            _c(\"td\", [\n              _c(\"input\", {\n                attrs: {\n                  id: \"powerInput\",\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"10\",\n                  step: \"0.2\",\n                  value: \"5\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"output\", { attrs: { id: \"powerOutput\" } }, [_vm._v(\"5\")]),\n              _c(\"br\")\n            ])\n          ]),\n          _c(\"tr\", [\n            _c(\"td\", [\n              _c(\"i\", {\n                staticClass: \"icon-lock\",\n                attrs: {\n                  onmouseover:\n                    \"tip('Unlock to allow option randomization on new map generation')\",\n                  \"data-locked\": \"1\",\n                  id: \"lockNeutralInput\"\n                }\n              })\n            ]),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Minimal distance to closest burg to consider land neutral')\"\n                }\n              },\n              [_vm._v(\"\\n          Neutral distance\\n        \")]\n            ),\n            _c(\"td\", [\n              _c(\"input\", {\n                attrs: {\n                  id: \"neutralInput\",\n                  type: \"range\",\n                  min: \"1\",\n                  max: \"500\",\n                  step: \"1\",\n                  value: \"200\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"output\", { attrs: { id: \"neutralOutput\" } }, [_vm._v(\"200\")])\n            ])\n          ]),\n          _c(\"tr\", { staticStyle: { display: \"none\" } }, [\n            _c(\"td\", [\n              _c(\"i\", {\n                staticClass: \"icon-lock\",\n                attrs: {\n                  onmouseover:\n                    \"tip('Unlock to allow option randomization on new map generation')\",\n                  \"data-locked\": \"1\",\n                  id: \"lockNamesInput\"\n                }\n              })\n            ]),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Define name generation style for burgs. Only the first one works offline')\"\n                }\n              },\n              [_vm._v(\"\\n          Burg names style\\n        \")]\n            ),\n            _c(\"td\", [\n              _c(\"select\", { attrs: { id: \"namesInput\" } }, [\n                _c(\"option\", { attrs: { value: \"0\" } }, [\n                  _vm._v(\n                    \"Pseudo-real (Culture based simulation; internal generation)\\n            \"\n                  )\n                ]),\n                _c(\"option\", { attrs: { value: \"1\" } }, [\n                  _vm._v(\"High Fantasy (English only; external resource)\")\n                ])\n              ])\n            ]),\n            _c(\"td\")\n          ]),\n          _c(\"tr\", [\n            _c(\"td\", [\n              _c(\"i\", {\n                staticClass: \"icon-lock-open\",\n                attrs: {\n                  onmouseover:\n                    \"tip('Lock to restrict option randomization on new map generation')\",\n                  \"data-locked\": \"0\",\n                  id: \"lockCulturesInput\"\n                }\n              })\n            ]),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Define how many Cultures should be generated')\"\n                }\n              },\n              [_vm._v(\"Cultures count\\n        \")]\n            ),\n            _c(\"td\", [\n              _c(\"input\", {\n                attrs: {\n                  id: \"culturesInput\",\n                  type: \"range\",\n                  min: \"1\",\n                  max: \"13\",\n                  value: \"7\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"output\", { attrs: { id: \"culturesOutput\" } }, [_vm._v(\"7\")])\n            ])\n          ]),\n          _c(\"tr\", [\n            _c(\"td\", [\n              _c(\"i\", {\n                staticClass: \"icon-lock-open\",\n                attrs: {\n                  onmouseover:\n                    \"tip('Lock to restrict option randomization on new map generation')\",\n                  \"data-locked\": \"0\",\n                  id: \"lockPrecInput\"\n                }\n              })\n            ]),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Set precipitation level. Controls river quantity and power')\"\n                }\n              },\n              [_vm._v(\"\\n          Precipitation\\n        \")]\n            ),\n            _c(\"td\", [\n              _c(\"input\", {\n                attrs: {\n                  id: \"precInput\",\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"25\",\n                  value: \"10\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"output\", { attrs: { id: \"precOutput\" } }, [_vm._v(\"15\")])\n            ])\n          ]),\n          _c(\"tr\", [\n            _c(\"td\", [\n              _c(\"i\", {\n                staticClass: \"icon-lock\",\n                attrs: {\n                  onmouseover:\n                    \"tip('Unlock to allow option randomization on new map generation')\",\n                  \"data-locked\": \"1\",\n                  id: \"lockSwampinessInput\"\n                }\n              })\n            ]),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Define the land swampiness. Increase to see more marshes on Relief map')\"\n                }\n              },\n              [_vm._v(\"\\n          Swampiness\\n        \")]\n            ),\n            _c(\"td\", [\n              _c(\"input\", {\n                attrs: {\n                  id: \"swampinessInput\",\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  value: \"10\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"output\", { attrs: { id: \"swampinessOutput\" } }, [\n                _vm._v(\"10\")\n              ])\n            ])\n          ]),\n          _c(\"tr\", [\n            _c(\"td\"),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover: \"tip('Define the coast outline contours scheme')\"\n                }\n              },\n              [_vm._v(\"Ocean layers\")]\n            ),\n            _c(\"td\", [\n              _c(\"select\", { attrs: { id: \"outlineLayersInput\" } }, [\n                _c(\"option\", { attrs: { value: \"random\" } }, [\n                  _vm._v(\"Random\")\n                ]),\n                _c(\"option\", { attrs: { value: \"none\" } }, [\n                  _vm._v(\"No outline\")\n                ]),\n                _c(\"option\", { attrs: { value: \"-6,-3,-1\", selected: \"\" } }, [\n                  _vm._v(\"Standard 3\")\n                ]),\n                _c(\"option\", { attrs: { value: \"-6,-4,-2\" } }, [\n                  _vm._v(\"Indented 3\")\n                ]),\n                _c(\"option\", { attrs: { value: \"-9,-6,-3,-1\" } }, [\n                  _vm._v(\"Standard 4\")\n                ]),\n                _c(\"option\", { attrs: { value: \"-6,-5,-4,-3,-2,-1\" } }, [\n                  _vm._v(\"Smooth 6\")\n                ]),\n                _c(\n                  \"option\",\n                  { attrs: { value: \"-9,-8,-7,-6,-5,-4,-3,-2,-1\" } },\n                  [_vm._v(\"Smooth 9\")]\n                )\n              ])\n            ]),\n            _c(\"td\")\n          ])\n        ]),\n        _c(\n          \"p\",\n          {\n            attrs: {\n              onmouseover:\n                \"tip('Generator settings. Getting applied immediately on change')\"\n            }\n          },\n          [_vm._v(\"\\n      Generator settings:\")]\n        ),\n        _c(\"table\", [\n          _c(\"tr\", [\n            _c(\"td\"),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover: \"tip('Set dialog and tool windows transparency')\"\n                }\n              },\n              [_vm._v(\"Transparency\")]\n            ),\n            _c(\"td\", [\n              _c(\"input\", {\n                attrs: {\n                  id: \"transparencyInput\",\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  value: \"0\",\n                  oninput: \"transparencyOutput.value = this.value\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"output\", { attrs: { id: \"transparencyOutput\" } }, [\n                _vm._v(\"0\")\n              ])\n            ])\n          ]),\n          _c(\"tr\", [\n            _c(\"td\"),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover:\n                    \"tip('Define relative size of a saved png images. Consider saving big images is slow')\"\n                }\n              },\n              [_vm._v(\"\\n          PNG resolution\\n        \")]\n            ),\n            _c(\"td\", [\n              _c(\"input\", {\n                attrs: {\n                  id: \"pngResolutionInput\",\n                  type: \"range\",\n                  min: \"1\",\n                  max: \"10\",\n                  value: \"5\",\n                  oninput: \"pngResolutionOutput.value = this.value + 'x'\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"output\", { attrs: { id: \"pngResolutionOutput\" } }, [\n                _vm._v(\"5x\")\n              ])\n            ])\n          ]),\n          _c(\"tr\", [\n            _c(\"td\"),\n            _c(\n              \"td\",\n              {\n                attrs: {\n                  onmouseover: \"tip('Set mininum and maximum zoom level')\"\n                }\n              },\n              [_vm._v(\"Zoom extent\")]\n            ),\n            _c(\"td\", { staticStyle: { width: \"130px\" } }, [\n              _c(\"span\", { attrs: { onmouseover: \"tip('Zoom out limit')\" } }, [\n                _vm._v(\"o:\")\n              ]),\n              _c(\"input\", {\n                staticClass: \"pairedNumber\",\n                attrs: {\n                  id: \"zoomExtentMin\",\n                  type: \"number\",\n                  min: \"0.2\",\n                  step: \"0.1\",\n                  max: \"20\",\n                  value: \"1\"\n                }\n              }),\n              _c(\"span\", { attrs: { onmouseover: \"tip('Zoom in limit')\" } }, [\n                _vm._v(\"i:\")\n              ]),\n              _c(\"input\", {\n                staticClass: \"pairedNumber\",\n                attrs: {\n                  id: \"zoomExtentMax\",\n                  type: \"number\",\n                  min: \"1\",\n                  max: \"50\",\n                  value: \"20\"\n                }\n              })\n            ]),\n            _c(\"td\", [\n              _c(\"i\", {\n                staticClass: \"icon-ccw\",\n                attrs: {\n                  onmouseover: \"tip('Restore default [1, 20] zoom extent')\",\n                  id: \"zoomExtentDefault\"\n                }\n              })\n            ])\n          ])\n        ]),\n        _c(\n          \"button\",\n          {\n            attrs: {\n              id: \"optionsReset\",\n              onmouseover: \"tip('Click to restore default options')\"\n            }\n          },\n          [_vm._v(\"Reset\\n      Defaults\\n    \")]\n        )\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}